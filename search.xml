<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>正则表达式实例-邮箱有效性验证</title>
      <link href="/2018/regex-emailverification/"/>
      <url>/2018/regex-emailverification/</url>
      <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><blockquote><p>正则表达式（Regular Expression，在代码中常简写为regex、regexp或RE），又称<strong>正规表示式、正规表示法、正规表达式、规则表达式、常规表示法</strong>，是计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p></blockquote><p>在我的小程序「QR二维码」中的反馈系统就用到了正则表达式来验证邮箱的有效性。<br>首先贴上代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]&#123;2,3&#125;$</span><br></pre></td></tr></table></figure><h1 id="满足验证的逻辑条件"><a href="#满足验证的逻辑条件" class="headerlink" title="满足验证的逻辑条件"></a>满足验证的逻辑条件</h1><p>通常，邮箱是由<code>用户名+@+域名</code>这样的形式构成,所以应该满足以下几个条件：</p><ol><li>@之前的字符串由大小写字母、数字构成</li><li>@和最后一个点(.)之间由大小写字母、数字构成，且不能为空</li><li>最后一个点(.)之后必须有内容，且大于2个字符</li></ol><p>满足以上条件才能通过邮箱的验证。</p><p>在正则表达式中，有很多语法和特殊字符，就这条用到的语句，我总结了其中的特殊字符：</p><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">^</td><td style="text-align:center">匹配输入字符串的起始位置</td></tr><tr><td style="text-align:center">$</td><td style="text-align:center">匹配输入字符串的结束位置</td></tr><tr><td style="text-align:center">?</td><td style="text-align:center">匹配前面的子表达式零次或者一次</td></tr><tr><td style="text-align:center">&#124;</td><td style="text-align:center">表示 或</td></tr><tr><td style="text-align:center">{m,n}</td><td style="text-align:center">m、n均为非负整数，m&lt;=n，最少匹配m次，最多匹配n次</td></tr></tbody></table><p>这里推荐一个 正则表达式 的教程： <a href="http://www.runoob.com/regexp/regexp-tutorial.html" target="_blank" rel="noopener">正则表达式-菜鸟教程</a></p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p>用小程序上的一段代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">formBindsubmit: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> strEmail = e.detail.value.email;</span><br><span class="line">    <span class="keyword">var</span> pattern = <span class="regexp">/^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]&#123;2,3&#125;$/</span>;</span><br><span class="line">    <span class="keyword">var</span> strEmail = pattern.test(strEmail);</span><br><span class="line">    <span class="keyword">if</span>(strEmail)&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>监听表格提交的按钮事件，用这个表达式来检测用户输入的Email是否合法。<br><img src="https://images.gxuann.cn/archives/regex-emailverification1.gif" alt=""><br><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大范围延时摄影测试</title>
      <link href="/2018/time-lapse-photography/"/>
      <url>/2018/time-lapse-photography/</url>
      <content type="html"><![CDATA[<p>这周末和同学一起在图书馆前拍摄了一段大范围演示摄影，但是由于之前路线规划的有问题，导致最后成片的时间很短，所以仅此用于测试，以后应该能拍出更好的！</p><hr><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","video":{"url":"https://videos.gxuann.cn/job_library-ltp.mp4","pic":"https://images.gxuann.cn/archives/timelapsephotography.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信小程序-QR二维码</title>
      <link href="/2018/wxapp-qrcode/"/>
      <url>/2018/wxapp-qrcode/</url>
      <content type="html"><![CDATA[<blockquote><p>2017年1月9日凌晨，小程序正式上线！2017年9月27日上午10点「QR二维码」正式上线。</p></blockquote><p><img src="https://images.gxuann.cn/archives/wxapp-qrcode-banner.png" alt="图自：腾讯网"><br></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>暑假的时候我就寻思着可以研究研究这小程序，明确需求之后，觉得可以做一个二维码生成器，原因嘛，比较简单在github上找到了一个可以生成二维码的js，直接调用就行；一直拖到开学才开工，我记得当时9月份还在备考二级，然后没事的时候研究研究这个小程序，差不多2周，初版就成型了，然后急急忙忙地就向微信提交了代码审核，当时我还一直在想会不会因为功能太单一了当做demo就给我退回来了，结果过了1天的审核期，收到了过审通知，立马上线了第一个版本。<br><br>这个版本的问题也超级多，最大的问题就是生成的二维码保存之后是空白的（后来发现了这个问题出在哪里了，原作者的js文件没有上色，导致绘制出一个透明的二维码，所以保存之后是空白的。）等到了十一假期的时候修正了这个错误，还添加了保存按钮，当时自豪地把这个版本称为2.0新时代。<br><br>一个简单的UI一个简单的JS库支撑着这个版本度过了3个月，期间我还加入了反馈功能，这样就可以接收到用户在使用过程中遇到的一些问题或者一些反馈。在这三个月的时间里，这个小程序积累了1400+个用户，日平均活跃量20上下，我个人对这个数据是比较满意的。<br><br>在这个寒假了我重写了这个小程序，使用了MinUI和WeUI这两种样式库，在这过程中通过使用框架也了解了什么是组件化开发，在设计完UI之后，我觉得之前使用JS文件生成二维码最大的缺点就是不支持emoji表情，我大概看了下原作者的JS文件，为了支持中文将字符进行了转码，这样输入emoji之后也同样会被转码，生成二维码之后就会乱码；为了解决这个问题，我找到了PHP中有个QRCODE库，将它架在服务器上，生成二维码的时候使用<code>wx.request(OBJECT)</code>这个API向服务器发送<code>GET</code>请求， 这样就通过参数生成二维码，<strong>这个操作会在浏览器内完成，不会生成图片，也不会被保存到服务器上</strong>；除了以上两点，我还调用了<code>wx.scanCode(OBJECT)</code>这个api，可以用来识别二维码，这样这个小程序的功能就全了。</p><h4 id="QRCode-3-0-新功能"><a href="#QRCode-3-0-新功能" class="headerlink" title="QRCode 3.0 新功能"></a>QRCode 3.0 新功能</h4><ul><li>新的UI:结合使用了Minui &amp; WeUI</li><li>支持FontAwesome字体</li><li>添加了扫描二维码的功能</li></ul><hr><h3 id="关于-amp-说明"><a href="#关于-amp-说明" class="headerlink" title="关于&amp;说明"></a>关于&amp;说明</h3><p>1.PHP Qr Code：<a href="http://phpqrcode.sourceforge.net/" target="_blank" rel="noopener">官网 phpqrcode.sourceforge.net</a><br>2.MinUI：<a href="https://github.com/meili/minui" target="_blank" rel="noopener">Github项目地址</a><br>3.WeUI： <a href="https://github.com/Tencent/weui-wxss/" target="_blank" rel="noopener">Github项目地址</a><br>4.微信官方小程序开发手册： <a href="https://mp.weixin.qq.com/debug/wxadoc/dev/" target="_blank" rel="noopener">官网地址</a></p><h4 id="关于PHPQrCode"><a href="#关于PHPQrCode" class="headerlink" title="关于PHPQrCode"></a>关于PHPQrCode</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$value=$_GET[<span class="string">'detail'</span>];  </span><br><span class="line">$errorCorrectionLevel = <span class="string">"H"</span>;</span><br><span class="line">$matrixPointSize = <span class="string">"10"</span>;</span><br><span class="line">QRcode::png($value, <span class="keyword">false</span>, $errorCorrectionLevel, $matrixPointSize);</span><br></pre></td></tr></table></figure><p>以上四句是部分代码，用于生成二维码的<code>QRcode::png</code>方法一共有6个参数：<br>1.<code>$value</code>：用于转换的数据。<br>2.<code>$outfile</code>：默认为<code>false</code>，不生成文件，只将二维码图片返回，否则需要给出存放生成二维码图片的路径.<br>3.<code>$errorCorrectionLevel</code>：控制二维码容错率，不同的参数表示二维码可被覆盖的区域百分比.<br>4.<code>$matrixPointSize</code>：控制生成图片的大小.<br>5.<code>$margin</code>：控制生成二维码的空白区域大小.<br>6.<code>$saveandprint</code>：保存二维码图片并显示出来，<code>$outfile</code>必须传递图片路径.</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>ok，说了这么多感谢大家的支持，打开微信扫描下面任意一个二维码就可以直接访问「QR二维码」</p><hr><p><img src="https://images.gxuann.cn/archives/gh_db3301df811e_258.jpg" alt=""><br><img src="https://images.gxuann.cn/archives/gh_db3301df811e_258_normal.jpg" alt=""></p><hr>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java学习笔记(3)-运算符</title>
      <link href="/2018/java-study-notes3/"/>
      <url>/2018/java-study-notes3/</url>
      <content type="html"><![CDATA[<h1 id="算术运算符与赋值运算符"><a href="#算术运算符与赋值运算符" class="headerlink" title="算术运算符与赋值运算符"></a>算术运算符与赋值运算符</h1><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><ul><li>格式：<code>变量=表达式;</code><ul><li>例：<code>int n = 3;</code></li></ul></li></ul><h2 id="复合赋值运算符"><a href="#复合赋值运算符" class="headerlink" title="复合赋值运算符"></a>复合赋值运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">表达式</th><th style="text-align:center">计算</th><th style="text-align:center">结果(x=15)</th></tr></thead><tbody><tr><td style="text-align:center">+=</td><td style="text-align:center">x+=5</td><td style="text-align:center">x=x+5</td><td style="text-align:center">20</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">x-=5</td><td style="text-align:center">x=x-5</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">x*=5</td><td style="text-align:center">x=x*5</td><td style="text-align:center">75</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">x/=5</td><td style="text-align:center">x=x/5</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">x%=5</td><td style="text-align:center">x=x%5</td><td style="text-align:center">0</td></tr></tbody></table><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><ul><li>主要用于基本的算术运算</li></ul><table><thead><tr><th style="text-align:center">算数运算符</th><th style="text-align:center">名称</th><th style="text-align:center">举例</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法</td><td style="text-align:center">5+10=15</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法</td><td style="text-align:center">10-5=5</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法3*</td><td style="text-align:center">6=18</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法</td><td style="text-align:center">34/4=9</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">求余</td><td style="text-align:center">13%3=1</td></tr><tr><td style="text-align:center">++</td><td style="text-align:center">自增1</td><td style="text-align:center">int n=3; n++;</td></tr><tr><td style="text-align:center">–</td><td style="text-align:center">自减1</td><td style="text-align:center">int n=4; n–;</td></tr></tbody></table><h2 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h2><table><thead><tr><th style="text-align:center">表达式</th><th style="text-align:center">执行方式</th></tr></thead><tbody><tr><td style="text-align:center">num2=++num1;</td><td style="text-align:center">先自加，再赋值</td></tr><tr><td style="text-align:center">num2=num1++;</td><td style="text-align:center">先赋值，再自加</td></tr><tr><td style="text-align:center">num2=–num1;</td><td style="text-align:center">先自减，再赋值</td></tr><tr><td style="text-align:center">num2=num1–;</td><td style="text-align:center">先赋值，再自减</td></tr></tbody></table><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><ul><li>比较运算符用于判断两个数据的大小</li><li>比较的结果是一个布尔值</li></ul><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:center">表达式</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">></td><td style="text-align:center">大于</td><td style="text-align:center">5&gt;3</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">5&lt;3</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">>=</td><td style="text-align:center">大于等于</td><td style="text-align:center">5&gt;=3</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td><td style="text-align:center">5&lt;=3</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">==</td><td style="text-align:center">等于</td><td style="text-align:center">5==3</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">不等于</td><td style="text-align:center">5!=3</td><td style="text-align:center">true</td></tr></tbody></table><h2 id="if条件结构"><a href="#if条件结构" class="headerlink" title="if条件结构"></a>if条件结构</h2><ul><li>简单if语句的格式：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件)&#123;</span><br><span class="line">    &lt;语句块&gt;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    &lt;语句块&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li>逻辑运算符用来连接一个或多个条件，判断这些条件是否成立</li><li>逻辑运算符的结果是布尔类型</li></ul><p><img src="https://images.gxuann.cn/archives/java-study-notes3-logical.png" alt=""></p><ul><li><p>&amp;：会计算整个表达式，再进行判断；&amp;&amp;：先计算左边的表达式，如果成立才接着计算右边的表达式，如果不成立，则后面的都不计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">boolean</span> b = (<span class="number">3</span>&gt;<span class="number">7</span>)&amp;&amp;((n++)&lt;<span class="number">2</span>)</span><br><span class="line">System.out.println(b,n);   <span class="comment">//b=false,n=3</span></span><br></pre></td></tr></table></figure></li><li><p>||:叫做短路运算符，如果第一个表达式的值就能决定表达式最后的结果，运算符右边的表达式就不再计算了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">boolean</span> b = (<span class="number">3</span>&lt;<span class="number">7</span>)||((n++)&lt;<span class="number">2</span>)</span><br><span class="line">System.out,println(b,n);   <span class="comment">//b=true,n=3</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="条件运算符与运算符的优先级"><a href="#条件运算符与运算符的优先级" class="headerlink" title="条件运算符与运算符的优先级"></a>条件运算符与运算符的优先级</h1><h2 id="条件与算符"><a href="#条件与算符" class="headerlink" title="条件与算符"></a>条件与算符</h2><ul><li>Java中的条件运算符是三目运算符</li><li><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">布尔表达式?表达式1:表达式2</span><br></pre></td></tr></table></figure></li><li><p>当布尔表达式的值为true，则返回表达式1的值，否则返回表达式2的值</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> max;</span><br><span class="line">max = a&gt;b?a:b;</span><br><span class="line">System.out.println(max);  <span class="comment">//求a和b的最大值,max=20</span></span><br></pre></td></tr></table></figure><h2 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h2><p><strong>优先级由大到小排列</strong><br><img src="https://images.gxuann.cn/archives/java-study-notes3-priority.png" alt=""></p><h1 id="计算闰年问题"><a href="#计算闰年问题" class="headerlink" title="计算闰年问题"></a>计算闰年问题</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断输入的年份是否是闰年</span></span><br><span class="line">System.out.println(<span class="string">"请输入年份:"</span>);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> year = sc.nextInt();</span><br><span class="line"><span class="comment">//闰年的判断规则：能被4整除但是不能被100整除的年份，或者能被400整除的年份</span></span><br><span class="line"><span class="keyword">if</span>(((year%<span class="number">4</span>==<span class="number">0</span>)&amp;(year%<span class="number">100</span>!=<span class="number">0</span>))|(year%<span class="number">400</span>==<span class="number">0</span>)) &#123;</span><br><span class="line">System.out.println(year+<span class="string">"是闰年"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(year+<span class="string">"不是闰年"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java学习笔记(2)-标识符与关键字</title>
      <link href="/2018/java-study-notes2/"/>
      <url>/2018/java-study-notes2/</url>
      <content type="html"><![CDATA[<h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><h3 id="标识符的命名规则"><a href="#标识符的命名规则" class="headerlink" title="标识符的命名规则"></a>标识符的命名规则</h3><ul><li>标识符可以由字母、数字、下划线(_)和美元符($)组成，不能以数字开头</li><li>标识符严格区分大小写</li><li>标识符不能使Java关键字和保留字</li><li>标识符的命名最好能反映出其作用</li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><table><thead><tr><th style="text-align:center">abstract</th><th style="text-align:center">boolean</th><th style="text-align:center">break</th><th style="text-align:center">byte</th><th style="text-align:center">case</th><th style="text-align:center">catch</th></tr></thead><tbody><tr><td style="text-align:center">char</td><td style="text-align:center">class</td><td style="text-align:center">continue</td><td style="text-align:center">default</td><td style="text-align:center">do</td><td style="text-align:center">double</td></tr><tr><td style="text-align:center">else</td><td style="text-align:center">extends</td><td style="text-align:center">false</td><td style="text-align:center">final</td><td style="text-align:center">finally</td><td style="text-align:center">float</td></tr><tr><td style="text-align:center">for</td><td style="text-align:center">if</td><td style="text-align:center">implements</td><td style="text-align:center">import</td><td style="text-align:center">native</td><td style="text-align:center">int</td></tr><tr><td style="text-align:center">interface</td><td style="text-align:center">long</td><td style="text-align:center">instanceof</td><td style="text-align:center">new</td><td style="text-align:center">null</td><td style="text-align:center">package</td></tr><tr><td style="text-align:center">private</td><td style="text-align:center">protected</td><td style="text-align:center">public</td><td style="text-align:center">return</td><td style="text-align:center">short</td><td style="text-align:center">static</td></tr><tr><td style="text-align:center">super</td><td style="text-align:center">switch</td><td style="text-align:center">synchronized</td><td style="text-align:center">this</td><td style="text-align:center">throw</td><td style="text-align:center">throws</td></tr><tr><td style="text-align:center">transient</td><td style="text-align:center">true</td><td style="text-align:center">try</td><td style="text-align:center">void</td><td style="text-align:center">volatile</td><td style="text-align:center">while</td></tr></tbody></table><hr><h1 id="变量的概念与数据类型"><a href="#变量的概念与数据类型" class="headerlink" title="变量的概念与数据类型"></a>变量的概念与数据类型</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>变量的三个元素：变量类型、变量名和变量值</li></ul><h3 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h3><ul><li>满足标识符命名规则</li><li>符合<strong>驼峰法</strong>命名规则</li><li>尽量简单，做到见名知意</li><li>变量名的长度没有限制</li></ul><h3 id="类的命名规则"><a href="#类的命名规则" class="headerlink" title="类的命名规则"></a>类的命名规则</h3><ul><li>满足<strong>Pascal</strong>命名规范(首字母总要大小)</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://images.gxuann.cn/archives/java-study-notes2-datatype.png" alt=""></p><ul><li>引用数据类型：<ol><li>类(class)</li><li>接口(interface)</li><li>数组</li></ol></li><li>基本数据类型：<ol><li>数值型<ol><li>整数类型(byte、short、int、long)</li><li>浮点类型(float、double)</li></ol></li><li>字符型(char)</li><li>布尔型(boolean)</li></ol></li></ul><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:center">说明</th><th style="text-align:center">字节</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">字节型</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">短整型</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">整型</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">长整型</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">单精度浮点型</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">双精度浮点型</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">字符型</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">布尔型</td><td style="text-align:center">1</td></tr></tbody></table><hr><h1 id="数据类型的字面值及变量定义"><a href="#数据类型的字面值及变量定义" class="headerlink" title="数据类型的字面值及变量定义"></a>数据类型的字面值及变量定义</h1><h2 id="整型字面值及变量声明"><a href="#整型字面值及变量声明" class="headerlink" title="整型字面值及变量声明"></a>整型字面值及变量声明</h2><ul><li>Java中有三种表示整数的方法：十进制、八进制、十六进制</li></ul><h4 id="进制表示"><a href="#进制表示" class="headerlink" title="进制表示"></a>进制表示</h4><ul><li>八进制：以0开头，包括0-7的数字</li><li>十六进制：以0x或0X开头，包括0-9的数字以及字母A-F</li></ul><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><ul><li>格式：<code>数据类型 变量名；</code><ul><li>例： <code>int n; //声明整型变量n</code></li><li><code>long count; //声明长整型变量count</code></li></ul></li></ul><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><ul><li>使用<code>=</code>运算符进行赋值</li><li><code>=</code>叫做赋值运算符，将运算符右边的值赋给左边的变量<ul><li>例： <code>n=3; //将3赋值给n</code></li></ul></li><li>可以再定义变量的同事给变量赋值，即变量的初始化</li></ul><h2 id="浮点型字面值"><a href="#浮点型字面值" class="headerlink" title="浮点型字面值"></a>浮点型字面值</h2><ul><li>浮点型字面值<strong>默认情况</strong>下表示<strong>double类型</strong>，也可以在值后加d或D<ul><li>例：123.43d或123.43D</li></ul></li><li>如表示float类型，则需要在字面之后加f或者F</li></ul><h2 id="基本数据类型变量的存储"><a href="#基本数据类型变量的存储" class="headerlink" title="基本数据类型变量的存储"></a>基本数据类型变量的存储</h2><ul><li>数据类型分为基本数据类型和引用数据类型</li><li>引用数据类型包括数组和类等</li><li>类定义的变量又叫做对象</li></ul><h4 id="按照作用范围分为："><a href="#按照作用范围分为：" class="headerlink" title="按照作用范围分为："></a>按照作用范围分为：<br></h4><ul><li>类级</li><li>对象实例级</li><li>方法级 —&gt;局部变量</li><li>块级</li></ul><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><p><img src="https://images.gxuann.cn/archives/java-study-notes2-ram.png" alt=""></p><ul><li>局部变量是存储在<code>栈</code>中<ul><li>如<code>int</code>，在定义之后会在，栈中划分一个<code>int</code>大小(4字节)的空间给<code>int</code>的变量</li><li><img src="https://images.gxuann.cn/archives/java-study-notes2-ram2.png" alt=""></li></ul></li></ul><h2 id="字符型字面值"><a href="#字符型字面值" class="headerlink" title="字符型字面值"></a>字符型字面值</h2><ul><li>字符型字面值用单引号内的单个字符表示<ul><li>例： ‘a’ ‘b’ ‘$’</li></ul></li><li>定义字符型变量，和整型和浮点型相同<ul><li>例 <code>char a = &#39;a&#39;</code></li></ul></li></ul><h2 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h2><ul><li>Unicode编码又称为统一码、万国码</li><li>几乎上是支持所有字符集</li><li>Unicode表示法，在值前加前缀<code>\u</code><h2 id="布尔类型字面值"><a href="#布尔类型字面值" class="headerlink" title="布尔类型字面值"></a>布尔类型字面值</h2></li><li>布尔值只能定义为<code>true</code>和<code>false</code></li><li>定义：<code>boolean b = true;</code><h2 id="字符串字面值"><a href="#字符串字面值" class="headerlink" title="字符串字面值"></a>字符串字面值</h2><strong>字符串不属于基本数据类型，它属于类</strong></li><li>双引号引起来的0个或多个字符</li><li>定义：<code>String s = &quot;String&quot;;</code></li></ul><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><table><thead><tr><th style="text-align:center">转义字符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">\uxxx</td><td style="text-align:center">四位16进制数所表示的字符</td></tr><tr><td style="text-align:center">\’</td><td style="text-align:center">单引号字符</td></tr><tr><td style="text-align:center">\”</td><td style="text-align:center">双引号字符</td></tr><tr><td style="text-align:center">‘\‘</td><td style="text-align:center">反斜杠字符</td></tr><tr><td style="text-align:center">\r</td><td style="text-align:center">回车</td></tr><tr><td style="text-align:center">\n</td><td style="text-align:center">换行</td></tr><tr><td style="text-align:center">\t</td><td style="text-align:center">横向跳格</td></tr><tr><td style="text-align:center">\b</td><td style="text-align:center">退格</td></tr></tbody></table><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><ul><li>分为自动类型转换和强制类型转换</li></ul><h4 id="自动类型转换顺序"><a href="#自动类型转换顺序" class="headerlink" title="自动类型转换顺序"></a>自动类型转换顺序</h4><p><img src="https://images.gxuann.cn/archives/java-study-notes2-typeconversion.png" alt=""></p><h4 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h4><ul><li><p>如果A类型的数据表示范围比B类型大，则将A类型的值赋值给B类型，则需要强制类型转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> d = <span class="number">123.4</span>;</span><br><span class="line"><span class="keyword">float</span> f = (<span class="keyword">float</span>)d;</span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2></li><li>使用关键字<code>final</code>来定义常量</li><li>命名规则：一般使用大写字母来定义<ul><li><code>final double PI = 3.14;</code></li><li><code>final double MIN_VALUE = 0;</code></li></ul></li></ul><h2 id="基本数据类型范围"><a href="#基本数据类型范围" class="headerlink" title="基本数据类型范围"></a>基本数据类型范围</h2><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">位</th><th style="text-align:center">字节</th><th style="text-align:center">最小范围</th><th style="text-align:center">最大范围</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">-2^7</td><td style="text-align:center">2^7</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">16</td><td style="text-align:center">2</td><td style="text-align:center">-2^15</td><td style="text-align:center">2^15</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">-2^31</td><td style="text-align:center">2^31</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">-2^63</td><td style="text-align:center">2^63</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">1.4E-45</td><td style="text-align:center">3.4028235E38</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">4.9E-324</td><td style="text-align:center">1.7976931348623157E308</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java学习笔记(1)-初识</title>
      <link href="/2018/java-study-notes1/"/>
      <url>/2018/java-study-notes1/</url>
      <content type="html"><![CDATA[<blockquote><p>接下来的Java学习笔记系列，是我通过业余时间学习Java的一些内容后总结而成的。</p></blockquote><h2 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h2><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><ul><li>JVM(Java Virtual Machine), Java虚拟机</li><li>JVM是Java平台无关性实现的<code>关键</code></li></ul><h4 id="Java程序执行流程"><a href="#Java程序执行流程" class="headerlink" title="Java程序执行流程"></a>Java程序执行流程</h4><p>源文件(.Java)–&gt;编译器(compiler)–&gt;字节码文件(.class)–&gt;解释器(interpreter)–&gt;程序<br><code>解释执行由 JVM 来执行</code></p><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3><ul><li>JDK(Java Development Kit), Java语言的软件开发工具包</li><li>两个主要的组件：<ol><li>-javac -编译器，将源程序转换成字节码</li><li>-java -运行编译后的java程序(.class)</li></ol></li></ul><h3 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h3><ul><li>JRE(Java Runtime Environment)</li><li>包括Java虚拟机(JVM)、Java核心类库和支持文件 - 如果只需要运行Java程序，安装JRE即可</li><li>如果需要开发Java软件，需安装JDK</li><li><code>JDK</code>是面向开发人员 <code>JRE</code>面向使用者</li><li>JDK中附带有JRE</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JRE=JVM+JavaSE标准类库</span><br><span class="line">JDK=JRE+开发工具集</span><br></pre></td></tr></table></figure><h3 id="Java平台"><a href="#Java平台" class="headerlink" title="Java平台"></a>Java平台</h3><table><thead><tr><th style="text-align:center">Java SE</th><th style="text-align:center">Java EE</th><th style="text-align:center">Java ME</th></tr></thead><tbody><tr><td style="text-align:center">桌面程序</td><td style="text-align:center">Web程序</td><td style="text-align:center">移动设备*</td></tr><tr><td style="text-align:center">Java标准版</td><td style="text-align:center">Java企业版</td><td style="text-align:center">Java微型版</td></tr></tbody></table><hr><h2 id="Java程序的结构"><a href="#Java程序的结构" class="headerlink" title="Java程序的结构"></a>Java程序的结构</h2><ul><li>class (类名) *class是定义类的关键字</li><li>public 公开</li><li>static 静态修饰符</li><li>void 返回空值</li><li>main 主方法体</li><li>String 字符串类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Google-2017年度热搜榜</title>
      <link href="/2018/Google-Year-in-search-2017/"/>
      <url>/2018/Google-Year-in-search-2017/</url>
      <content type="html"><![CDATA[<blockquote><p>在2017年里，全球的用户搜索最多的一个词是 How ，这个词被翻译成(怎么/如何/多少)。被提及的问题比如如何参军、如何竞选公职、如何做一个好父母等……<br>请在<a href="https://google.com/2017" target="_blank" rel="noopener">google.com/2017</a>中探索这一年的时刻！</p></blockquote><p><br></p><h4 id="飓风、iPhone-8-成最热关键词"><a href="#飓风、iPhone-8-成最热关键词" class="headerlink" title="飓风、iPhone 8 成最热关键词"></a>飓风、iPhone 8 成最热关键词</h4><p>前些阵子，谷歌发布了一年一度的搜索关键词榜单，本次榜单共分为综合、技术、新闻等十五大板块。评定以 2016 年的搜索数据为对比，检索出2017 年流量增幅较大的关键词。<br></p><p>综合搜索关键词总榜，飓风伊尔玛、iPhone 8、iPhone X 占据前三；涉嫌性骚扰女性的美国主持人马特·劳尔、英国哈里王子的未婚妻 Meghan Markle 分列四、五名；讲述校园暴力的美国电视剧《13 个理由》、今年逝世的摇滚明星“汤姆·佩蒂”、指尖陀螺、今年自杀身亡的林肯公园主唱“切斯特·本宁顿”、首次因雾霾空气污染而必须戴上口罩的“印度国家板球队”，构成了榜单的后五位。<br></p><p>除了综合榜单，谷歌今年还推出了全球十大消费者技术、全球十大新闻等热搜关键词。在十大消费者技术关键词中，苹果手机依旧占据榜首，任天堂和微软的游戏主机也突破性的进入榜单。值得一提的是，中国手机品牌 OPPO 和一加也名列其中。<br></p><p><br></p><h4 id="“How-to”-成为今年榜单亮点"><a href="#“How-to”-成为今年榜单亮点" class="headerlink" title="“How to” 成为今年榜单亮点"></a>“How to” 成为今年榜单亮点</h4><p>除了搜集各个领域的十大热搜关键词，谷歌今年还引入了一个<code>how to</code>的热搜关键词榜单。谷歌的研究人员在调查 2017 年谷歌搜索年度趋势时发现，关于<code>how（如何/怎样/多少</code>的搜索量比过去多了至少 10 倍。下面是<code>how to</code>相关的榜单：</p><ol><li>如何制作黏胶玩具（类似于橡皮泥）</li><li>如何制作观看日食的眼镜</li><li>如何购买比特币</li><li>如何看梅威瑟 vs 麦格雷戈（搏击比赛）</li><li>如何玩指尖陀螺</li><li>如何观看日食</li><li>如何冻结你的信用卡</li><li>如何玩强力球（美国一种彩票）</li><li>如何筛选记录</li><li>如何快速减掉腹部脂肪<br><br></li></ol><hr><p>除了十大<code>how to</code>榜单，谷歌还制作了一个关于<code>how to</code>的宣传视频。从关心山火、飓风等自然灾难的起源、进展，到如何帮助战争难民及拉斯维加斯枪击案等社会问题的受害者；从如何安抚洪水中的小狗、如何成为一名坚强的女性等个体问题，到关注朝鲜的核导弹射程有多长等人类生存问题，视频中设置的<code>how to</code>疑问，都根据 2017 年谷歌搜索用户的搜索行为，进行了全方位的展示。</p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","video":{"url":"https://videos.gxuann.cn/job_Google%20-%20Year%20In%20Search%202017%28720P%29.mp4","pic":"https://images.gxuann.cn/archives/GoogleYearInSearch2017.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p><br></p><p>  &amp;&amp;<br>  end</p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CSS编码规范</title>
      <link href="/2018/css-style-guide/"/>
      <url>/2018/css-style-guide/</url>
      <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>CSS 作为网页样式的描述语言，在百度一直有着广泛的应用。本文档的目标是使 CSS 代码风格保持一致，容易被理解和被维护。</p><p>虽然本文档是针对 CSS 设计的，但是在使用各种 CSS 的预编译器(如 less、sass、stylus 等)时，适用的部分也应尽量遵循本文档的约定。</p><h2 id="2-代码风格"><a href="#2-代码风格" class="headerlink" title="2 代码风格"></a>2 代码风格</h2><h3 id="2-1-文件"><a href="#2-1-文件" class="headerlink" title="2.1 文件"></a>2.1 文件</h3><h4 id="建议-CSS-文件使用无-BOM-的-UTF-8-编码。"><a href="#建议-CSS-文件使用无-BOM-的-UTF-8-编码。" class="headerlink" title="[建议] CSS 文件使用无 BOM 的 UTF-8 编码。"></a>[建议] <code>CSS</code> 文件使用无 <code>BOM</code> 的 <code>UTF-8</code> 编码。</h4><p>解释：</p><p>UTF-8 编码具有更广泛的适应性。BOM 在使用程序或工具处理文件时可能造成不必要的干扰。</p><h3 id="2-2-缩进"><a href="#2-2-缩进" class="headerlink" title="2.2 缩进"></a>2.2 缩进</h3><h4 id="强制-使用-4-个空格做为一个缩进层级，不允许使用-2-个空格-或-tab-字符。"><a href="#强制-使用-4-个空格做为一个缩进层级，不允许使用-2-个空格-或-tab-字符。" class="headerlink" title="[强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符。"></a>[强制] 使用 <code>4</code> 个空格做为一个缩进层级，不允许使用 <code>2</code> 个空格 或 <code>tab</code> 字符。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-空格"><a href="#2-3-空格" class="headerlink" title="2.3 空格"></a>2.3 空格</h3><h4 id="强制-选择器-与-之间必须包含空格。"><a href="#强制-选择器-与-之间必须包含空格。" class="headerlink" title="[强制] 选择器 与 { 之间必须包含空格。"></a>[强制] <code>选择器</code> 与 <code>{</code> 之间必须包含空格。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-属性名-与之后的-之间不允许包含空格，-与-属性值-之间必须包含空格。"><a href="#强制-属性名-与之后的-之间不允许包含空格，-与-属性值-之间必须包含空格。" class="headerlink" title="[强制] 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格。"></a>[强制] <code>属性名</code> 与之后的 <code>:</code> 之间不允许包含空格， <code>:</code> 与 <code>属性值</code> 之间必须包含空格。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 0;</span><br></pre></td></tr></table></figure><h4 id="强制-列表型属性值-书写在单行时，-后必须跟一个空格。"><a href="#强制-列表型属性值-书写在单行时，-后必须跟一个空格。" class="headerlink" title="[强制] 列表型属性值 书写在单行时，, 后必须跟一个空格。"></a>[强制] <code>列表型属性值</code> 书写在单行时，<code>,</code> 后必须跟一个空格。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-family</span>: <span class="selector-tag">Arial</span>, <span class="selector-tag">sans-serif</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-行长度"><a href="#2-4-行长度" class="headerlink" title="2.4 行长度"></a>2.4 行长度</h3><h4 id="强制-每行不得超过-120-个字符，除非单行不可分割。"><a href="#强制-每行不得超过-120-个字符，除非单行不可分割。" class="headerlink" title="[强制] 每行不得超过 120 个字符，除非单行不可分割。"></a>[强制] 每行不得超过 <code>120</code> 个字符，除非单行不可分割。</h4><p>解释：</p><p>常见不可分割的场景为URL超长。</p><h4 id="建议-对于超长的样式，在样式值的-空格-处或-后换行，建议按逻辑分组。"><a href="#建议-对于超长的样式，在样式值的-空格-处或-后换行，建议按逻辑分组。" class="headerlink" title="[建议] 对于超长的样式，在样式值的 空格 处或 , 后换行，建议按逻辑分组。"></a>[建议] 对于超长的样式，在样式值的 <code>空格</code> 处或 <code>,</code> 后换行，建议按逻辑分组。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不同属性值按逻辑分组 */</span></span><br><span class="line"><span class="selector-tag">background</span>:</span><br><span class="line">    <span class="selector-tag">transparent</span> <span class="selector-tag">url</span>(<span class="selector-tag">aVeryVeryVeryLongUrlIsPlacedHere</span>)</span><br><span class="line">    <span class="selector-tag">no-repeat</span> 0 0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 可重复多次的属性，每次重复一行 */</span></span><br><span class="line"><span class="selector-tag">background-image</span>:</span><br><span class="line">    <span class="selector-tag">url</span>(<span class="selector-tag">aVeryVeryVeryLongUrlIsPlacedHere</span>)</span><br><span class="line">    <span class="selector-tag">url</span>(<span class="selector-tag">anotherVeryVeryVeryLongUrlIsPlacedHere</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 类似函数的属性值可以根据函数调用的缩进进行 */</span></span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">-webkit-gradient</span>(</span><br><span class="line">    <span class="selector-tag">linear</span>,</span><br><span class="line">    <span class="selector-tag">left</span> <span class="selector-tag">bottom</span>,</span><br><span class="line">    <span class="selector-tag">left</span> <span class="selector-tag">top</span>,</span><br><span class="line">    <span class="selector-tag">color-stop</span>(0<span class="selector-class">.04</span>, <span class="selector-tag">rgb</span>(88,94,124)),</span><br><span class="line">    <span class="selector-tag">color-stop</span>(0<span class="selector-class">.52</span>, <span class="selector-tag">rgb</span>(115,123,162))</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="2-5-选择器"><a href="#2-5-选择器" class="headerlink" title="2.5 选择器"></a>2.5 选择器</h3><h4 id="强制-当一个-rule-包含多个-selector-时，每个选择器声明必须独占一行。"><a href="#强制-当一个-rule-包含多个-selector-时，每个选择器声明必须独占一行。" class="headerlink" title="[强制] 当一个 rule 包含多个 selector 时，每个选择器声明必须独占一行。"></a>[强制] 当一个 rule 包含多个 selector 时，每个选择器声明必须独占一行。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.post</span>,</span><br><span class="line"><span class="selector-class">.page</span>,</span><br><span class="line"><span class="selector-class">.comment</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.post</span>, <span class="selector-class">.page</span>, <span class="selector-class">.comment</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-gt-、-、-选择器的两边各保留一个空格。"><a href="#强制-gt-、-、-选择器的两边各保留一个空格。" class="headerlink" title="[强制] &gt;、+、~ 选择器的两边各保留一个空格。"></a>[强制] <code>&gt;</code>、<code>+</code>、<code>~</code> 选择器的两边各保留一个空格。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">main</span> &gt; <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">label</span> + <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span> ~ <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#69C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">main</span>&gt;<span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">label</span>+<span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span>~<span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#69C</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-属性选择器中的值必须用双引号包围。"><a href="#强制-属性选择器中的值必须用双引号包围。" class="headerlink" title="[强制] 属性选择器中的值必须用双引号包围。"></a>[强制] 属性选择器中的值必须用双引号包围。</h4><p>解释：</p><p>不允许使用单引号，不允许不使用引号。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">article</span><span class="selector-attr">[character="juliet"]</span> &#123;</span><br><span class="line">    <span class="attribute">voice-family</span>: <span class="string">"Vivien Leigh"</span>, victoria, female;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">article</span><span class="selector-attr">[character='juliet']</span> &#123;</span><br><span class="line">    <span class="attribute">voice-family</span>: <span class="string">"Vivien Leigh"</span>, victoria, female;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-属性"><a href="#2-6-属性" class="headerlink" title="2.6 属性"></a>2.6 属性</h3><h4 id="强制-属性定义必须另起一行。"><a href="#强制-属性定义必须另起一行。" class="headerlink" title="[强制] 属性定义必须另起一行。"></a>[强制] 属性定义必须另起一行。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>; &#125;</span><br></pre></td></tr></table></figure><h4 id="强制-属性定义后必须以分号结尾。"><a href="#强制-属性定义后必须以分号结尾。" class="headerlink" title="[强制] 属性定义后必须以分号结尾。"></a>[强制] 属性定义后必须以分号结尾。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.selector</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-通用"><a href="#3-通用" class="headerlink" title="3 通用"></a>3 通用</h2><h3 id="3-1-选择器"><a href="#3-1-选择器" class="headerlink" title="3.1 选择器"></a>3.1 选择器</h3><h4 id="强制-如无必要，不得为-id、class-选择器添加类型选择器进行限定。"><a href="#强制-如无必要，不得为-id、class-选择器添加类型选择器进行限定。" class="headerlink" title="[强制] 如无必要，不得为 id、class 选择器添加类型选择器进行限定。"></a>[强制] 如无必要，不得为 <code>id</code>、<code>class</code> 选择器添加类型选择器进行限定。</h4><p>解释：</p><p>在性能和维护性上，都有一定的影响。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-id">#error</span>,</span><br><span class="line"><span class="selector-class">.danger-message</span> &#123;</span><br><span class="line">    <span class="attribute">font-color</span>: <span class="number">#c00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">dialog</span><span class="selector-id">#error</span>,</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.danger-message</span> &#123;</span><br><span class="line">    <span class="attribute">font-color</span>: <span class="number">#c00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-选择器的嵌套层级应不大于-3-级，位置靠后的限定条件应尽可能精确。"><a href="#建议-选择器的嵌套层级应不大于-3-级，位置靠后的限定条件应尽可能精确。" class="headerlink" title="[建议] 选择器的嵌套层级应不大于 3 级，位置靠后的限定条件应尽可能精确。"></a>[建议] 选择器的嵌套层级应不大于 <code>3</code> 级，位置靠后的限定条件应尽可能精确。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-id">#username</span> <span class="selector-tag">input</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.avatar</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.header</span> <span class="selector-class">.login</span> <span class="selector-id">#username</span> <span class="selector-tag">input</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-tag">div</span> * &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-属性缩写"><a href="#3-2-属性缩写" class="headerlink" title="3.2 属性缩写"></a>3.2 属性缩写</h3><h4 id="建议-在可以使用缩写的情况下，尽量使用属性缩写。"><a href="#建议-在可以使用缩写的情况下，尽量使用属性缩写。" class="headerlink" title="[建议] 在可以使用缩写的情况下，尽量使用属性缩写。"></a>[建议] 在可以使用缩写的情况下，尽量使用属性缩写。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: arial, sans-serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-使用-border-margin-padding-等缩写时，应注意隐含值对实际数值的影响，确实需要设置多个方向的值时才使用缩写。"><a href="#建议-使用-border-margin-padding-等缩写时，应注意隐含值对实际数值的影响，确实需要设置多个方向的值时才使用缩写。" class="headerlink" title="[建议] 使用 border / margin / padding 等缩写时，应注意隐含值对实际数值的影响，确实需要设置多个方向的值时才使用缩写。"></a>[建议] 使用 <code>border</code> / <code>margin</code> / <code>padding</code> 等缩写时，应注意隐含值对实际数值的影响，确实需要设置多个方向的值时才使用缩写。</h4><p>解释：</p><p><code>border</code> / <code>margin</code> / <code>padding</code> 等缩写会同时设置多个属性的值，容易覆盖不需要覆盖的设定。如某些方向需要继承其他声明的值，则应该分开设置。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* centering &lt;article class="page"&gt; horizontally and highlight featured ones */</span></span><br><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.page</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.featured</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#69c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.page</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> auto; <span class="comment">/* introducing redundancy */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.featured</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#69c</span>; <span class="comment">/* introducing redundancy */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-属性书写顺序"><a href="#3-3-属性书写顺序" class="headerlink" title="3.3 属性书写顺序"></a>3.3 属性书写顺序</h3><h4 id="建议-同一-rule-set-下的属性在书写时，应按功能进行分组，并以-Formatting-Model（布局方式、位置）-gt-Box-Model（尺寸）-gt-Typographic（文本相关）-gt-Visual（视觉效果）-的顺序书写，以提高代码的可读性。"><a href="#建议-同一-rule-set-下的属性在书写时，应按功能进行分组，并以-Formatting-Model（布局方式、位置）-gt-Box-Model（尺寸）-gt-Typographic（文本相关）-gt-Visual（视觉效果）-的顺序书写，以提高代码的可读性。" class="headerlink" title="[建议] 同一 rule set 下的属性在书写时，应按功能进行分组，并以 Formatting Model（布局方式、位置） &gt; Box Model（尺寸） &gt; Typographic（文本相关） &gt; Visual（视觉效果） 的顺序书写，以提高代码的可读性。"></a>[建议] 同一 rule set 下的属性在书写时，应按功能进行分组，并以 <strong>Formatting Model（布局方式、位置） &gt; Box Model（尺寸） &gt; Typographic（文本相关） &gt; Visual（视觉效果）</strong> 的顺序书写，以提高代码的可读性。</h4><p>解释：</p><ul><li>Formatting Model 相关属性包括：<code>position</code> / <code>top</code> / <code>right</code> / <code>bottom</code> / <code>left</code> / <code>float</code> / <code>display</code> / <code>overflow</code> 等</li><li>Box Model 相关属性包括：<code>border</code> / <code>margin</code> / <code>padding</code> / <code>width</code> / <code>height</code> 等</li><li>Typographic 相关属性包括：<code>font</code> / <code>line-height</code> / <code>text-align</code> / <code>word-wrap</code> 等</li><li>Visual 相关属性包括：<code>background</code> / <code>color</code> / <code>transition</code> / <code>list-style</code> 等</li></ul><p>另外，如果包含 <code>content</code> 属性，应放在最前面。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="comment">/* formatting model: positioning schemes / offsets / z-indexes / display / ...  */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* box model: sizes / margins / paddings / borders / ...  */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* typographic: font / aligns / text styles / ... */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* visual: colors / shadows / gradients / ... */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: color <span class="number">1s</span>;</span><br><span class="line">       <span class="attribute">-moz-transition</span>: color <span class="number">1s</span>;</span><br><span class="line">            <span class="attribute">transition</span>: color <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-清除浮动"><a href="#3-4-清除浮动" class="headerlink" title="3.4 清除浮动"></a>3.4 清除浮动</h3><h4 id="建议-当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置-clear-或触发-BFC-的方式进行-clearfix。尽量不使用增加空标签的方式。"><a href="#建议-当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置-clear-或触发-BFC-的方式进行-clearfix。尽量不使用增加空标签的方式。" class="headerlink" title="[建议] 当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置 clear 或触发 BFC 的方式进行 clearfix。尽量不使用增加空标签的方式。"></a>[建议] 当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置 <code>clear</code> 或触发 <code>BFC</code> 的方式进行 <code>clearfix</code>。尽量不使用增加空标签的方式。</h4><p>解释：</p><p>触发 BFC 的方式很多，常见的有：</p><ul><li>float 非 none</li><li>position 非 static</li><li>overflow 非 visible</li></ul><p>另需注意，对已经触发 BFC 的元素不需要再进行 clearfix。</p><h3 id="3-5-important"><a href="#3-5-important" class="headerlink" title="3.5 !important"></a>3.5 !important</h3><h4 id="建议-尽量不使用-important-声明。"><a href="#建议-尽量不使用-important-声明。" class="headerlink" title="[建议] 尽量不使用 !important 声明。"></a>[建议] 尽量不使用 <code>!important</code> 声明。</h4><h4 id="建议-当需要强制指定样式且不允许任何场景覆盖时，通过标签内联和-important-定义样式。"><a href="#建议-当需要强制指定样式且不允许任何场景覆盖时，通过标签内联和-important-定义样式。" class="headerlink" title="[建议] 当需要强制指定样式且不允许任何场景覆盖时，通过标签内联和 !important 定义样式。"></a>[建议] 当需要强制指定样式且不允许任何场景覆盖时，通过标签内联和 <code>!important</code> 定义样式。</h4><p>解释：</p><p>必须注意的是，仅在设计上 <code>确实不允许任何其它场景覆盖样式</code> 时，才使用内联的 <code>!important</code> 样式。通常在第三方环境的应用中使用这种方案。下面的 <code>z-index</code> 章节是其中一个特殊场景的典型样例。</p><h3 id="3-6-z-index"><a href="#3-6-z-index" class="headerlink" title="3.6 z-index"></a>3.6 z-index</h3><h4 id="建议-将-z-index-进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。"><a href="#建议-将-z-index-进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。" class="headerlink" title="[建议] 将 z-index 进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。"></a>[建议] 将 <code>z-index</code> 进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。</h4><p>解释：</p><p>同层的多个元素，如多个由用户输入触发的 Dialog，在该层级内使用相同的 <code>z-index</code> 或递增 <code>z-index</code>。</p><p>建议每层包含100个 <code>z-index</code> 来容纳足够的元素，如果每层元素较多，可以调整这个数值。</p><h4 id="建议-在可控环境下，期望显示在最上层的元素，z-index-指定为-999999。"><a href="#建议-在可控环境下，期望显示在最上层的元素，z-index-指定为-999999。" class="headerlink" title="[建议] 在可控环境下，期望显示在最上层的元素，z-index 指定为 999999。"></a>[建议] 在可控环境下，期望显示在最上层的元素，<code>z-index</code> 指定为 <code>999999</code>。</h4><p>解释：</p><p>可控环境分成两种，一种是自身产品线环境；还有一种是可能会被其他产品线引用，但是不会被外部第三方的产品引用。</p><p>不建议取值为 <code>2147483647</code>。以便于自身产品线被其他产品线引用时，当遇到层级覆盖冲突的情况，留出向上调整的空间。</p><h4 id="建议-在第三方环境下，期望显示在最上层的元素，通过标签内联和-important，将-z-index-指定为-2147483647。"><a href="#建议-在第三方环境下，期望显示在最上层的元素，通过标签内联和-important，将-z-index-指定为-2147483647。" class="headerlink" title="[建议] 在第三方环境下，期望显示在最上层的元素，通过标签内联和 !important，将 z-index 指定为 2147483647。"></a>[建议] 在第三方环境下，期望显示在最上层的元素，通过标签内联和 <code>!important</code>，将 <code>z-index</code> 指定为 <code>2147483647</code>。</h4><p>解释：</p><p>第三方环境对于开发者来说完全不可控。在第三方环境下的元素，为了保证元素不被其页面其他样式定义覆盖，需要采用此做法。</p><h2 id="4-值与单位"><a href="#4-值与单位" class="headerlink" title="4 值与单位"></a>4 值与单位</h2><h3 id="4-1-文本"><a href="#4-1-文本" class="headerlink" title="4.1 文本"></a>4.1 文本</h3><h4 id="强制-文本内容必须用双引号包围。"><a href="#强制-文本内容必须用双引号包围。" class="headerlink" title="[强制] 文本内容必须用双引号包围。"></a>[强制] 文本内容必须用双引号包围。</h4><p>解释：</p><p>文本类型的内容可能在选择器、属性值等内容中。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[lang|="zh"]</span> <span class="selector-tag">q</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"“"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[lang|="zh"]</span> <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"”"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[lang|=zh]</span> <span class="selector-tag">q</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">'Microsoft YaHei'</span>, sans-serif;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'“'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span><span class="selector-attr">[lang|=zh]</span> <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"”"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-数值"><a href="#4-2-数值" class="headerlink" title="4.2 数值"></a>4.2 数值</h3><h4 id="强制-当数值为-0-1-之间的小数时，省略整数部分的-0。"><a href="#强制-当数值为-0-1-之间的小数时，省略整数部分的-0。" class="headerlink" title="[强制] 当数值为 0 - 1 之间的小数时，省略整数部分的 0。"></a>[强制] 当数值为 0 - 1 之间的小数时，省略整数部分的 <code>0</code>。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">panel</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">panel</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-url"><a href="#4-3-url" class="headerlink" title="4.3 url()"></a>4.3 url()</h3><h4 id="强制-url-函数中的路径不加引号。"><a href="#强制-url-函数中的路径不加引号。" class="headerlink" title="[强制] url() 函数中的路径不加引号。"></a>[强制] <code>url()</code> 函数中的路径不加引号。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(bg.png);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-url-函数中的绝对路径可省去协议名。"><a href="#建议-url-函数中的绝对路径可省去协议名。" class="headerlink" title="[建议] url() 函数中的绝对路径可省去协议名。"></a>[建议] <code>url()</code> 函数中的绝对路径可省去协议名。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(//baidu.com/img/bg.png) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-长度"><a href="#4-4-长度" class="headerlink" title="4.4 长度"></a>4.4 长度</h3><h4 id="强制-长度为-0-时须省略单位。-也只有长度单位可省"><a href="#强制-长度为-0-时须省略单位。-也只有长度单位可省" class="headerlink" title="[强制] 长度为 0 时须省略单位。 (也只有长度单位可省)"></a>[强制] 长度为 <code>0</code> 时须省略单位。 (也只有长度单位可省)</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-颜色"><a href="#4-5-颜色" class="headerlink" title="4.5 颜色"></a>4.5 颜色</h3><h4 id="强制-RGB颜色值必须使用十六进制记号形式-rrggbb。不允许使用-rgb-。"><a href="#强制-RGB颜色值必须使用十六进制记号形式-rrggbb。不允许使用-rgb-。" class="headerlink" title="[强制] RGB颜色值必须使用十六进制记号形式 #rrggbb。不允许使用 rgb()。"></a>[强制] RGB颜色值必须使用十六进制记号形式 <code>#rrggbb</code>。不允许使用 <code>rgb()</code>。</h4><p>解释：</p><p>带有alpha的颜色信息可以使用 <code>rgba()</code>。使用 <code>rgba()</code> 时每个逗号后必须保留一个空格。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="built_in">rgba</span>(0, 128, 0, .3);</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#008000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="built_in">rgba</span>(0,128,0,.3);</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(0, 128, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-颜色值可以缩写时，必须使用缩写形式。"><a href="#强制-颜色值可以缩写时，必须使用缩写形式。" class="headerlink" title="[强制] 颜色值可以缩写时，必须使用缩写形式。"></a>[强制] 颜色值可以缩写时，必须使用缩写形式。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#aca</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#aaccaa</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-颜色值不允许使用命名色值。"><a href="#强制-颜色值不允许使用命名色值。" class="headerlink" title="[强制] 颜色值不允许使用命名色值。"></a>[强制] 颜色值不允许使用命名色值。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#90ee90</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: lightgreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。"><a href="#建议-颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。" class="headerlink" title="[建议] 颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。"></a>[建议] 颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#aca</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#90ee90</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ACA</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#90EE90</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.success</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ACA</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#90ee90</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-2D-位置"><a href="#4-6-2D-位置" class="headerlink" title="4.6 2D 位置"></a>4.6 2D 位置</h3><h4 id="强制-必须同时给出水平和垂直方向的位置。"><a href="#强制-必须同时给出水平和垂直方向的位置。" class="headerlink" title="[强制] 必须同时给出水平和垂直方向的位置。"></a>[强制] 必须同时给出水平和垂直方向的位置。</h4><p>解释：</p><p>2D 位置初始值为 <code>0% 0%</code>，但在只有一个方向的值时，另一个方向的值会被解析为 center。为避免理解上的困扰，应同时给出两个方向的值。<a href="http://www.w3.org/TR/CSS21/colors.html#propdef-background-position" target="_blank" rel="noopener">background-position属性值的定义</a></p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: center top; <span class="comment">/* 50% 0% */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: top; <span class="comment">/* 50% 0% */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-文本编排"><a href="#5-文本编排" class="headerlink" title="5 文本编排"></a>5 文本编排</h2><h3 id="5-1-字体族"><a href="#5-1-字体族" class="headerlink" title="5.1 字体族"></a>5.1 字体族</h3><h4 id="强制-font-family-属性中的字体族名称应使用字体的英文-Family-Name，其中如有空格，须放置在引号中。"><a href="#强制-font-family-属性中的字体族名称应使用字体的英文-Family-Name，其中如有空格，须放置在引号中。" class="headerlink" title="[强制] font-family 属性中的字体族名称应使用字体的英文 Family Name，其中如有空格，须放置在引号中。"></a>[强制] <code>font-family</code> 属性中的字体族名称应使用字体的英文 <code>Family Name</code>，其中如有空格，须放置在引号中。</h4><p>解释：</p><p>所谓英文 Family Name，为字体文件的一个元数据，常见名称如下：</p><table><thead><tr><th>字体</th><th>操作系统</th><th>Family Name</th></tr></thead><tbody><tr><td>宋体 (中易宋体)</td><td>Windows</td><td>SimSun</td></tr><tr><td>黑体 (中易黑体)</td><td>Windows</td><td>SimHei</td></tr><tr><td>微软雅黑</td><td>Windows</td><td>Microsoft YaHei</td></tr><tr><td>微软正黑</td><td>Windows</td><td>Microsoft JhengHei</td></tr><tr><td>华文黑体</td><td>Mac/iOS</td><td>STHeiti</td></tr><tr><td>冬青黑体</td><td>Mac/iOS</td><td>Hiragino Sans GB</td></tr><tr><td>文泉驿正黑</td><td>Linux</td><td>WenQuanYi Zen Hei</td></tr><tr><td>文泉驿微米黑</td><td>Linux</td><td>WenQuanYi Micro Hei</td></tr></tbody></table><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Microsoft YaHei"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-font-family-按「西文字体在前、中文字体在后」、「效果佳-质量高-更能满足需求-的字体在前、效果一般的字体在后」的顺序编写，最后必须指定一个通用字体族-serif-sans-serif-。"><a href="#强制-font-family-按「西文字体在前、中文字体在后」、「效果佳-质量高-更能满足需求-的字体在前、效果一般的字体在后」的顺序编写，最后必须指定一个通用字体族-serif-sans-serif-。" class="headerlink" title="[强制] font-family 按「西文字体在前、中文字体在后」、「效果佳 (质量高/更能满足需求) 的字体在前、效果一般的字体在后」的顺序编写，最后必须指定一个通用字体族( serif / sans-serif )。"></a>[强制] <code>font-family</code> 按「西文字体在前、中文字体在后」、「效果佳 (质量高/更能满足需求) 的字体在前、效果一般的字体在后」的顺序编写，最后必须指定一个通用字体族( <code>serif</code> / <code>sans-serif</code> )。</h4><p>解释：</p><p>更详细说明可参考<a href="http://www.zhihu.com/question/19911793/answer/13329819" target="_blank" rel="noopener">本文</a>。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Display according to platform */</span></span><br><span class="line"><span class="selector-class">.article</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Specific for most platforms */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Helvetica Neue"</span>, Arial, <span class="string">"Hiragino Sans GB"</span>, <span class="string">"WenQuanYi Micro Hei"</span>, <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-font-family-不区分大小写，但在同一个项目中，同样的-Family-Name-大小写必须统一。"><a href="#强制-font-family-不区分大小写，但在同一个项目中，同样的-Family-Name-大小写必须统一。" class="headerlink" title="[强制] font-family 不区分大小写，但在同一个项目中，同样的 Family Name 大小写必须统一。"></a>[强制] <code>font-family</code> 不区分大小写，但在同一个项目中，同样的 <code>Family Name</code> 大小写必须统一。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">"Microsoft YaHei"</span>, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-字号"><a href="#5-2-字号" class="headerlink" title="5.2 字号"></a>5.2 字号</h3><h4 id="强制-需要在-Windows-平台显示的中文内容，其字号应不小于-12px。"><a href="#强制-需要在-Windows-平台显示的中文内容，其字号应不小于-12px。" class="headerlink" title="[强制] 需要在 Windows 平台显示的中文内容，其字号应不小于 12px。"></a>[强制] 需要在 Windows 平台显示的中文内容，其字号应不小于 <code>12px</code>。</h4><p>解释：</p><p>由于 Windows 的字体渲染机制，小于 <code>12px</code> 的文字显示效果极差、难以辨认。</p><h3 id="5-3-字体风格"><a href="#5-3-字体风格" class="headerlink" title="5.3 字体风格"></a>5.3 字体风格</h3><h4 id="建议-需要在-Windows-平台显示的中文内容，不要使用除-normal-外的-font-style。其他平台也应慎用。"><a href="#建议-需要在-Windows-平台显示的中文内容，不要使用除-normal-外的-font-style。其他平台也应慎用。" class="headerlink" title="[建议] 需要在 Windows 平台显示的中文内容，不要使用除 normal 外的 font-style。其他平台也应慎用。"></a>[建议] 需要在 Windows 平台显示的中文内容，不要使用除 <code>normal</code> 外的 <code>font-style</code>。其他平台也应慎用。</h4><p>解释：</p><p>由于中文字体没有 <code>italic</code> 风格的实现，所有浏览器下都会 fallback 到 <code>obilique</code> 实现 (自动拟合为斜体)，小字号下 (特别是 Windows 下会在小字号下使用点阵字体的情况下) 显示效果差，造成阅读困难。</p><h3 id="5-4-字重"><a href="#5-4-字重" class="headerlink" title="5.4 字重"></a>5.4 字重</h3><h4 id="强制-font-weight-属性必须使用数值方式描述。"><a href="#强制-font-weight-属性必须使用数值方式描述。" class="headerlink" title="[强制] font-weight 属性必须使用数值方式描述。"></a>[强制] <code>font-weight</code> 属性必须使用数值方式描述。</h4><p>解释：</p><p>CSS 的字重分 100 – 900 共九档，但目前受字体本身质量和浏览器的限制，实际上支持 <code>400</code> 和 <code>700</code> 两档，分别等价于关键词 <code>normal</code> 和 <code>bold</code>。</p><p>浏览器本身使用一系列<a href="http://www.w3.org/TR/CSS21/fonts.html#propdef-font-weight" target="_blank" rel="noopener">启发式规则</a>来进行匹配，在 <code>&lt;700</code> 时一般匹配字体的 Regular 字重，<code>&gt;=700</code> 时匹配 Bold 字重。</p><p>但已有浏览器开始支持 <code>=600</code> 时匹配 Semibold 字重 (见<a href="http://justineo.github.io/slideshows/font/#/3/15" target="_blank" rel="noopener">此表</a>)，故使用数值描述增加了灵活性，也更简短。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-行高"><a href="#5-5-行高" class="headerlink" title="5.5 行高"></a>5.5 行高</h3><h4 id="建议-line-height-在定义文本段落时，应使用数值。"><a href="#建议-line-height-在定义文本段落时，应使用数值。" class="headerlink" title="[建议] line-height 在定义文本段落时，应使用数值。"></a>[建议] <code>line-height</code> 在定义文本段落时，应使用数值。</h4><p>解释：</p><p>将 <code>line-height</code> 设置为数值，浏览器会基于当前元素设置的 <code>font-size</code> 进行再次计算。在不同字号的文本段落组合中，能达到较为舒适的行间间隔效果，避免在每个设置了 <code>font-size</code> 都需要设置 <code>line-height</code>。</p><p>当 <code>line-height</code> 用于控制垂直居中时，还是应该设置成与容器高度一致。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-变换与动画"><a href="#6-变换与动画" class="headerlink" title="6 变换与动画"></a>6 变换与动画</h2><h4 id="强制-使用-transition-时应指定-transition-property。"><a href="#强制-使用-transition-时应指定-transition-property。" class="headerlink" title="[强制] 使用 transition 时应指定 transition-property。"></a>[强制] 使用 <code>transition</code> 时应指定 <code>transition-property</code>。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: color <span class="number">1s</span>, border-color <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-尽可能在浏览器能高效实现的属性上添加过渡和动画。"><a href="#建议-尽可能在浏览器能高效实现的属性上添加过渡和动画。" class="headerlink" title="[建议] 尽可能在浏览器能高效实现的属性上添加过渡和动画。"></a>[建议] 尽可能在浏览器能高效实现的属性上添加过渡和动画。</h4><p>解释：</p><p>见<a href="http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/" target="_blank" rel="noopener">本文</a>，在可能的情况下应选择这样四种变换：</p><ul><li><code>transform: translate(npx, npx);</code></li><li><code>transform: scale(n);</code></li><li><code>transform: rotate(ndeg);</code></li><li><code>opacity: 0..1;</code></li></ul><p>典型的，可以使用 <code>translate</code> 来代替 <code>left</code> 作为动画属性。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(20px); <span class="comment">/* move right for 20px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: left <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>; <span class="comment">/* move right for 20px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-响应式"><a href="#7-响应式" class="headerlink" title="7 响应式"></a>7 响应式</h2><h4 id="强制-Media-Query-不得单独编排，必须与相关的规则一起定义。"><a href="#强制-Media-Query-不得单独编排，必须与相关的规则一起定义。" class="headerlink" title="[强制] Media Query 不得单独编排，必须与相关的规则一起定义。"></a>[强制] <code>Media Query</code> 不得单独编排，必须与相关的规则一起定义。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Good */</span></span><br><span class="line"><span class="comment">/* header styles */</span></span><br><span class="line">@<span class="keyword">media</span> (...) &#123;</span><br><span class="line">    <span class="comment">/* header styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* main styles */</span></span><br><span class="line">@<span class="keyword">media</span> (...) &#123;</span><br><span class="line">    <span class="comment">/* main styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* footer styles */</span></span><br><span class="line">@<span class="keyword">media</span> (...) &#123;</span><br><span class="line">    <span class="comment">/* footer styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Bad */</span></span><br><span class="line"><span class="comment">/* header styles */</span></span><br><span class="line"><span class="comment">/* main styles */</span></span><br><span class="line"><span class="comment">/* footer styles */</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> (...) &#123;</span><br><span class="line">    <span class="comment">/* header styles */</span></span><br><span class="line">    <span class="comment">/* main styles */</span></span><br><span class="line">    <span class="comment">/* footer styles */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="强制-Media-Query-如果有多个逗号分隔的条件时，应将每个条件放在单独一行中。"><a href="#强制-Media-Query-如果有多个逗号分隔的条件时，应将每个条件放在单独一行中。" class="headerlink" title="[强制] Media Query 如果有多个逗号分隔的条件时，应将每个条件放在单独一行中。"></a>[强制] <code>Media Query</code> 如果有多个逗号分隔的条件时，应将每个条件放在单独一行中。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span></span><br><span class="line">(-webkit-min-device-pixel-ratio: 2), /* Webkit-based browsers */</span><br><span class="line">(<span class="selector-tag">min--moz-device-pixel-ratio</span>: 2),    <span class="comment">/* Older Firefox browsers (prior to Firefox 16) */</span></span><br><span class="line">(<span class="selector-tag">min-resolution</span>: 2<span class="selector-tag">dppx</span>),             <span class="comment">/* The standard way */</span></span><br><span class="line">(<span class="selector-tag">min-resolution</span>: 192<span class="selector-tag">dpi</span>) &#123;           <span class="comment">/* dppx fallback */</span></span><br><span class="line">    <span class="comment">/* Retina-specific stuff here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-尽可能给出在高分辨率设备-Retina-下效果更佳的样式。"><a href="#建议-尽可能给出在高分辨率设备-Retina-下效果更佳的样式。" class="headerlink" title="[建议] 尽可能给出在高分辨率设备 (Retina) 下效果更佳的样式。"></a>[建议] 尽可能给出在高分辨率设备 (Retina) 下效果更佳的样式。</h4><h2 id="8-兼容性"><a href="#8-兼容性" class="headerlink" title="8 兼容性"></a>8 兼容性</h2><h3 id="8-1-属性前缀"><a href="#8-1-属性前缀" class="headerlink" title="8.1 属性前缀"></a>8.1 属性前缀</h3><h4 id="强制-带私有前缀的属性由长到短排列，按冒号位置对齐。"><a href="#强制-带私有前缀的属性由长到短排列，按冒号位置对齐。" class="headerlink" title="[强制] 带私有前缀的属性由长到短排列，按冒号位置对齐。"></a>[强制] 带私有前缀的属性由长到短排列，按冒号位置对齐。</h4><p>解释：</p><p>标准属性放在最后，按冒号对齐方便阅读，也便于在编辑器内进行多行编辑。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-box-sizing</span>: border-box;</span><br><span class="line">       <span class="attribute">-moz-box-sizing</span>: border-box;</span><br><span class="line">            <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-2-Hack"><a href="#8-2-Hack" class="headerlink" title="8.2 Hack"></a>8.2 Hack</h3><h4 id="建议-需要添加-hack-时应尽可能考虑是否可以采用其他方式解决。"><a href="#建议-需要添加-hack-时应尽可能考虑是否可以采用其他方式解决。" class="headerlink" title="[建议] 需要添加 hack 时应尽可能考虑是否可以采用其他方式解决。"></a>[建议] 需要添加 <code>hack</code> 时应尽可能考虑是否可以采用其他方式解决。</h4><p>解释：</p><p>如果能通过合理的 HTML 结构或使用其他的 CSS 定义达到理想的样式，则不应该使用 hack 手段解决问题。通常 hack 会导致维护成本的增加。</p><h4 id="建议-尽量使用-选择器-hack-处理兼容性，而非-属性-hack。"><a href="#建议-尽量使用-选择器-hack-处理兼容性，而非-属性-hack。" class="headerlink" title="[建议] 尽量使用 选择器 hack 处理兼容性，而非 属性 hack。"></a>[建议] 尽量使用 <code>选择器 hack</code> 处理兼容性，而非 <code>属性 hack</code>。</h4><p>解释：</p><p>尽量使用符合 CSS 语法的 selector hack，可以避免一些第三方库无法识别 hack 语法的问题。</p><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* IE 7 */</span></span><br><span class="line">*<span class="selector-pseudo">:first-child</span> + <span class="selector-tag">html</span> <span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* IE 6 */</span></span><br><span class="line">* <span class="selector-tag">html</span> <span class="selector-id">#header</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-尽量使用简单的-属性-hack。"><a href="#建议-尽量使用简单的-属性-hack。" class="headerlink" title="[建议] 尽量使用简单的 属性 hack。"></a>[建议] 尽量使用简单的 <code>属性 hack</code>。</h4><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">_display</span>: inline; <span class="comment">/* fix double margin */</span></span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    *zoom: 1; /* triggering hasLayout */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-3-Expression"><a href="#8-3-Expression" class="headerlink" title="8.3 Expression"></a>8.3 Expression</h3><h4 id="强制-禁止使用-Expression。"><a href="#强制-禁止使用-Expression。" class="headerlink" title="[强制] 禁止使用 Expression。"></a>[强制] 禁止使用 <code>Expression</code>。</h4><p><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTML编码规范</title>
      <link href="/2018/html-style-guide/"/>
      <url>/2018/html-style-guide/</url>
      <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>HTML 作为描述网页结构的超文本标记语言，在百度一直有着广泛的应用。本文档的目标是使 HTML 代码风格保持一致，容易被理解和被维护。</p><h2 id="2-代码风格"><a href="#2-代码风格" class="headerlink" title="2 代码风格"></a>2 代码风格</h2><h3 id="2-1-缩进与换行"><a href="#2-1-缩进与换行" class="headerlink" title="2.1 缩进与换行"></a>2.1 缩进与换行</h3><h4 id="强制-使用-4-个空格做为一个缩进层级，不允许使用-2-个空格-或-tab-字符。"><a href="#强制-使用-4-个空格做为一个缩进层级，不允许使用-2-个空格-或-tab-字符。" class="headerlink" title="[强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符。"></a>[强制] 使用 <code>4</code> 个空格做为一个缩进层级，不允许使用 <code>2</code> 个空格 或 <code>tab</code> 字符。</h4><p>解释：<br>对于非 HTML 标签之间的缩进，比如 script 或 style 标签内容缩进，与 script 或 style 标签的缩进同级。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="comment">/* 样式内容的第一级缩进与所属的 style 标签对齐 */</span></span></span><br><span class="line"><span class="undefined">ul &#123;</span></span><br><span class="line"><span class="undefined">    padding: 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>first<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>second<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">// 脚本代码的第一级缩进与所属的 script 标签对齐</span></span><br><span class="line"><span class="undefined">require(['app'], function (app) &#123;</span></span><br><span class="line"><span class="undefined">    app.init();</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-每行不得超过-120-个字符。"><a href="#建议-每行不得超过-120-个字符。" class="headerlink" title="[建议] 每行不得超过 120 个字符。"></a>[建议] 每行不得超过 <code>120</code> 个字符。</h4><p>解释：</p><p>过长的代码不容易阅读与维护。但是考虑到 HTML 的特殊性，不做硬性要求。</p><h3 id="2-2-命名"><a href="#2-2-命名" class="headerlink" title="2.2 命名"></a>2.2 命名</h3><h4 id="强制-class-必须单词全字母小写，单词间以-分隔。"><a href="#强制-class-必须单词全字母小写，单词间以-分隔。" class="headerlink" title="[强制] class 必须单词全字母小写，单词间以 - 分隔。"></a>[强制] <code>class</code> 必须单词全字母小写，单词间以 <code>-</code> 分隔。</h4><h4 id="强制-class-必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。"><a href="#强制-class-必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。" class="headerlink" title="[强制] class 必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。"></a>[强制] <code>class</code> 必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-元素-id-必须保证页面唯一。"><a href="#强制-元素-id-必须保证页面唯一。" class="headerlink" title="[强制] 元素 id 必须保证页面唯一。"></a>[强制] 元素 <code>id</code> 必须保证页面唯一。</h4><p>解释：</p><p>同一个页面中，不同的元素包含相同的 <code>id</code>，不符合 <code>id</code> 的属性含义。并且使用 <code>document.getElementById</code> 时可能导致难以追查的问题。</p><h4 id="建议-id-建议单词全字母小写，单词间以-分隔。同项目必须保持风格一致。"><a href="#建议-id-建议单词全字母小写，单词间以-分隔。同项目必须保持风格一致。" class="headerlink" title="[建议] id 建议单词全字母小写，单词间以 - 分隔。同项目必须保持风格一致。"></a>[建议] <code>id</code> 建议单词全字母小写，单词间以 <code>-</code> 分隔。同项目必须保持风格一致。</h4><h4 id="建议-id、class-命名，在避免冲突并描述清楚的前提下尽可能短。"><a href="#建议-id、class-命名，在避免冲突并描述清楚的前提下尽可能短。" class="headerlink" title="[建议] id、class 命名，在避免冲突并描述清楚的前提下尽可能短。"></a>[建议] <code>id</code>、<code>class</code> 命名，在避免冲突并描述清楚的前提下尽可能短。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navigation"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"com"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"author"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-禁止为了-hook-脚本，创建无样式信息的-class。"><a href="#强制-禁止为了-hook-脚本，创建无样式信息的-class。" class="headerlink" title="[强制] 禁止为了 hook 脚本，创建无样式信息的 class。"></a>[强制] 禁止为了 <code>hook 脚本</code>，创建无样式信息的 <code>class</code>。</h4><p>解释：</p><p>不允许 <code>class</code> 只用于让 JavaScript 选择某些元素，<code>class</code> 应该具有明确的语义和样式。否则容易导致 CSS class 泛滥。</p><p>使用 <code>id</code>、属性选择作为 hook 是更好的方式。</p><h4 id="强制-同一页面，应避免使用相同的-name-与-id。"><a href="#强制-同一页面，应避免使用相同的-name-与-id。" class="headerlink" title="[强制] 同一页面，应避免使用相同的 name 与 id。"></a>[强制] 同一页面，应避免使用相同的 <code>name</code> 与 <code>id</code>。</h4><p>解释：</p><p>IE 浏览器会混淆元素的 <code>id</code> 和 <code>name</code> 属性， <code>document.getElementById</code> 可能获得不期望的元素。所以在对元素的 <code>id</code> 与 <code>name</code> 属性的命名需要非常小心。</p><p>一个比较好的实践是，为 <code>id</code> 和 <code>name</code> 使用不同的命名法。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"foo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"foo"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">// IE6 将显示 INPUT</span></span><br><span class="line"><span class="undefined">alert(document.getElementById('foo').tagName);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">`</span><br></pre></td></tr></table></figure><h3 id="2-3-标签"><a href="#2-3-标签" class="headerlink" title="2.3 标签"></a>2.3 标签</h3><h4 id="强制-标签名必须使用小写字母。"><a href="#强制-标签名必须使用小写字母。" class="headerlink" title="[强制] 标签名必须使用小写字母。"></a>[强制] 标签名必须使用小写字母。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello StyleGuide!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">P</span>&gt;</span>Hello StyleGuide!<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-对于无需自闭合的标签，不允许自闭合。"><a href="#强制-对于无需自闭合的标签，不允许自闭合。" class="headerlink" title="[强制] 对于无需自闭合的标签，不允许自闭合。"></a>[强制] 对于无需自闭合的标签，不允许自闭合。</h4><p>解释：</p><p>常见无需自闭合标签有 <code>input</code>、<code>br</code>、<code>img</code>、<code>hr</code> 等。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-对-HTML5-中规定允许省略的闭合标签，不允许省略闭合标签。"><a href="#强制-对-HTML5-中规定允许省略的闭合标签，不允许省略闭合标签。" class="headerlink" title="[强制] 对 HTML5 中规定允许省略的闭合标签，不允许省略闭合标签。"></a>[强制] 对 <code>HTML5</code> 中规定允许省略的闭合标签，不允许省略闭合标签。</h4><p>解释：</p><p>对代码体积要求非常严苛的场景，可以例外。比如：第三方页面使用的投放系统。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>first<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>second<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>first</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>second</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-标签使用必须符合标签嵌套规则。"><a href="#强制-标签使用必须符合标签嵌套规则。" class="headerlink" title="[强制] 标签使用必须符合标签嵌套规则。"></a>[强制] 标签使用必须符合标签嵌套规则。</h4><p>解释：</p><p>比如 <code>div</code> 不得置于 <code>p</code> 中，<code>tbody</code> 必须置于 <code>table</code> 中。</p><h4 id="建议-HTML-标签的使用应该遵循标签的语义。"><a href="#建议-HTML-标签的使用应该遵循标签的语义。" class="headerlink" title="[建议] HTML 标签的使用应该遵循标签的语义。"></a>[建议] HTML 标签的使用应该遵循标签的语义。</h4><p>解释：</p><p>下面是常见标签语义</p><ul><li>p - 段落</li><li>h1,h2,h3,h4,h5,h6 - 层级标题</li><li>strong,em - 强调</li><li>ins - 插入</li><li>del - 删除</li><li>abbr - 缩写</li><li>code - 代码标识</li><li>cite - 引述来源作品的标题</li><li>q - 引用</li><li>blockquote - 一段或长篇引用</li><li>ul - 无序列表</li><li>ol - 有序列表</li><li>dl,dt,dd - 定义列表</li></ul><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Esprima serves as an important <span class="tag">&lt;<span class="name">strong</span>&gt;</span>building block<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> for some JavaScript language tools.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Esprima serves as an important <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"strong"</span>&gt;</span>building block<span class="tag">&lt;/<span class="name">span</span>&gt;</span> for some JavaScript language tools.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-在-CSS-可以实现相同需求的情况下不得使用表格进行布局。"><a href="#建议-在-CSS-可以实现相同需求的情况下不得使用表格进行布局。" class="headerlink" title="[建议] 在 CSS 可以实现相同需求的情况下不得使用表格进行布局。"></a>[建议] 在 CSS 可以实现相同需求的情况下不得使用表格进行布局。</h4><p>解释：</p><p>在兼容性允许的情况下应尽量保持语义正确性。对网格对齐和拉伸性有严格要求的场景允许例外，如多列复杂表单。</p><h4 id="建议-标签的使用应尽量简洁，减少不必要的标签。"><a href="#建议-标签的使用应尽量简洁，减少不必要的标签。" class="headerlink" title="[建议] 标签的使用应尽量简洁，减少不必要的标签。"></a>[建议] 标签的使用应尽量简洁，减少不必要的标签。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">src</span>=<span class="string">"image.png"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-属性"><a href="#2-4-属性" class="headerlink" title="2.4 属性"></a>2.4 属性</h3><h4 id="强制-属性名必须使用小写字母。"><a href="#强制-属性名必须使用小写字母。" class="headerlink" title="[强制] 属性名必须使用小写字母。"></a>[强制] 属性名必须使用小写字母。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">cellSpacing</span>=<span class="string">"0"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="强制-属性值必须用双引号包围。"><a href="#强制-属性值必须用双引号包围。" class="headerlink" title="[强制] 属性值必须用双引号包围。"></a>[强制] 属性值必须用双引号包围。</h4><p>解释：</p><p>不允许使用单引号，不允许不使用引号。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"esl.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'esl.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">esl.js</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-布尔类型的属性，建议不添加属性值。"><a href="#建议-布尔类型的属性，建议不添加属性值。" class="headerlink" title="[建议] 布尔类型的属性，建议不添加属性值。"></a>[建议] 布尔类型的属性，建议不添加属性值。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-自定义属性建议以-xxx-为前缀，推荐使用-data-。"><a href="#建议-自定义属性建议以-xxx-为前缀，推荐使用-data-。" class="headerlink" title="[建议] 自定义属性建议以 xxx- 为前缀，推荐使用 data-。"></a>[建议] 自定义属性建议以 <code>xxx-</code> 为前缀，推荐使用 <code>data-</code>。</h4><p>解释：</p><p>使用前缀有助于区分自定义属性和标准定义的属性。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">data-ui-type</span>=<span class="string">"Select"</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-通用"><a href="#3-通用" class="headerlink" title="3 通用"></a>3 通用</h2><h3 id="3-1-DOCTYPE"><a href="#3-1-DOCTYPE" class="headerlink" title="3.1 DOCTYPE"></a>3.1 DOCTYPE</h3><h4 id="强制-使用-HTML5-的-doctype-来启用标准模式，建议使用大写的-DOCTYPE。"><a href="#强制-使用-HTML5-的-doctype-来启用标准模式，建议使用大写的-DOCTYPE。" class="headerlink" title="[强制] 使用 HTML5 的 doctype 来启用标准模式，建议使用大写的 DOCTYPE。"></a>[强制] 使用 <code>HTML5</code> 的 <code>doctype</code> 来启用标准模式，建议使用大写的 <code>DOCTYPE</code>。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-启用-IE-Edge-模式。"><a href="#建议-启用-IE-Edge-模式。" class="headerlink" title="[建议] 启用 IE Edge 模式。"></a>[建议] 启用 IE Edge 模式。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=Edge"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-在-html-标签上设置正确的-lang-属性。"><a href="#建议-在-html-标签上设置正确的-lang-属性。" class="headerlink" title="[建议] 在 html 标签上设置正确的 lang 属性。"></a>[建议] 在 <code>html</code> 标签上设置正确的 <code>lang</code> 属性。</h4><p>解释：</p><p>有助于提高页面的可访问性，如：让语音合成工具确定其所应该采用的发音，令翻译工具确定其翻译语言等。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-编码"><a href="#3-2-编码" class="headerlink" title="3.2 编码"></a>3.2 编码</h3><h4 id="强制-页面必须使用精简形式，明确指定字符编码。指定字符编码的-meta-必须是-head-的第一个直接子元素。"><a href="#强制-页面必须使用精简形式，明确指定字符编码。指定字符编码的-meta-必须是-head-的第一个直接子元素。" class="headerlink" title="[强制] 页面必须使用精简形式，明确指定字符编码。指定字符编码的 meta 必须是 head 的第一个直接子元素。"></a>[强制] 页面必须使用精简形式，明确指定字符编码。指定字符编码的 <code>meta</code> 必须是 <code>head</code> 的第一个直接子元素。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        ......</span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        ......</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-HTML-文件使用无-BOM-的-UTF-8-编码。"><a href="#建议-HTML-文件使用无-BOM-的-UTF-8-编码。" class="headerlink" title="[建议] HTML 文件使用无 BOM 的 UTF-8 编码。"></a>[建议] <code>HTML</code> 文件使用无 <code>BOM</code> 的 <code>UTF-8</code> 编码。</h4><p>解释：</p><p><code>UTF-8</code> 编码具有更广泛的适应性。<code>BOM</code> 在使用程序或工具处理文件时可能造成不必要的干扰。</p><h3 id="3-3-CSS-和-JavaScript-引入"><a href="#3-3-CSS-和-JavaScript-引入" class="headerlink" title="3.3 CSS 和 JavaScript 引入"></a>3.3 CSS 和 JavaScript 引入</h3><h4 id="强制-引入-CSS-时必须指明-rel-quot-stylesheet-quot-。"><a href="#强制-引入-CSS-时必须指明-rel-quot-stylesheet-quot-。" class="headerlink" title="[强制] 引入 CSS 时必须指明 rel=&quot;stylesheet&quot;。"></a>[强制] 引入 <code>CSS</code> 时必须指明 <code>rel=&quot;stylesheet&quot;</code>。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"page.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-引入-CSS-和-JavaScript-时无须指明-type-属性。"><a href="#建议-引入-CSS-和-JavaScript-时无须指明-type-属性。" class="headerlink" title="[建议] 引入 CSS 和 JavaScript 时无须指明 type 属性。"></a>[建议] 引入 <code>CSS</code> 和 <code>JavaScript</code> 时无须指明 <code>type</code> 属性。</h4><p>解释：</p><p><code>text/css</code> 和 <code>text/javascript</code> 是 <code>type</code> 的默认值。</p><h4 id="建议-展现定义放置于外部-CSS-中，行为定义放置于外部-JavaScript-中。"><a href="#建议-展现定义放置于外部-CSS-中，行为定义放置于外部-JavaScript-中。" class="headerlink" title="[建议] 展现定义放置于外部 CSS 中，行为定义放置于外部 JavaScript 中。"></a>[建议] 展现定义放置于外部 <code>CSS</code> 中，行为定义放置于外部 <code>JavaScript</code> 中。</h4><p>解释：</p><p>结构-样式-行为的代码分离，对于提高代码的可阅读性和维护性都有好处。</p><h4 id="建议-在-head-中引入页面需要的所有-CSS-资源。"><a href="#建议-在-head-中引入页面需要的所有-CSS-资源。" class="headerlink" title="[建议] 在 head 中引入页面需要的所有 CSS 资源。"></a>[建议] 在 <code>head</code> 中引入页面需要的所有 <code>CSS</code> 资源。</h4><p>解释：</p><p>在页面渲染的过程中，新的CSS可能导致元素的样式重新计算和绘制，页面闪烁。</p><h4 id="建议-JavaScript-应当放在页面末尾，或采用异步加载。"><a href="#建议-JavaScript-应当放在页面末尾，或采用异步加载。" class="headerlink" title="[建议] JavaScript 应当放在页面末尾，或采用异步加载。"></a>[建议] <code>JavaScript</code> 应当放在页面末尾，或采用异步加载。</h4><p>解释：</p><p>将 <code>script</code> 放在页面中间将阻断页面的渲染。出于性能方面的考虑，如非必要，请遵守此条建议。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- a lot of elements --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"init-behavior.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-移动环境或只针对现代浏览器设计的-Web-应用，如果引用外部资源的-URL-协议部分与页面相同，建议省略协议前缀。"><a href="#建议-移动环境或只针对现代浏览器设计的-Web-应用，如果引用外部资源的-URL-协议部分与页面相同，建议省略协议前缀。" class="headerlink" title="[建议] 移动环境或只针对现代浏览器设计的 Web 应用，如果引用外部资源的 URL 协议部分与页面相同，建议省略协议前缀。"></a>[建议] 移动环境或只针对现代浏览器设计的 Web 应用，如果引用外部资源的 <code>URL</code> 协议部分与页面相同，建议省略协议前缀。</h4><p>解释：</p><p>使用 <code>protocol-relative URL</code> 引入 CSS，在 <code>IE7/8</code> 下，会发两次请求。是否使用 <code>protocol-relative URL</code> 应充分考虑页面针对的环境。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//s1.bdstatic.com/cache/static/jquery-1.10.2.min_f2fb5194.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-head"><a href="#4-head" class="headerlink" title="4 head"></a>4 head</h2><h3 id="4-1-title"><a href="#4-1-title" class="headerlink" title="4.1 title"></a>4.1 title</h3><h4 id="强制-页面必须包含-title-标签声明标题。"><a href="#强制-页面必须包含-title-标签声明标题。" class="headerlink" title="[强制] 页面必须包含 title 标签声明标题。"></a>[强制] 页面必须包含 <code>title</code> 标签声明标题。</h4><h4 id="强制-title-必须作为-head-的直接子元素，并紧随-charset-声明之后。"><a href="#强制-title-必须作为-head-的直接子元素，并紧随-charset-声明之后。" class="headerlink" title="[强制] title 必须作为 head 的直接子元素，并紧随 charset 声明之后。"></a>[强制] <code>title</code> 必须作为 <code>head</code> 的直接子元素，并紧随 <code>charset</code> 声明之后。</h4><p>解释：</p><p><code>title</code> 中如果包含 ASCII 之外的字符，浏览器需要知道字符编码类型才能进行解码，否则可能导致乱码。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-favicon"><a href="#4-2-favicon" class="headerlink" title="4.2 favicon"></a>4.2 favicon</h3><h4 id="强制-保证-favicon-可访问。"><a href="#强制-保证-favicon-可访问。" class="headerlink" title="[强制] 保证 favicon 可访问。"></a>[强制] 保证 <code>favicon</code> 可访问。</h4><p>解释：</p><p>在未指定 favicon 时，大多数浏览器会请求 Web Server 根目录下的 <code>favicon.ico</code> 。为了保证 favicon 可访问，避免 404，必须遵循以下两种方法之一：</p><ol><li>在 Web Server 根目录放置 <code>favicon.ico</code> 文件。</li><li>使用 <code>link</code> 指定 favicon。</li></ol><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"path/to/favicon.ico"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-viewport"><a href="#4-3-viewport" class="headerlink" title="4.3 viewport"></a>4.3 viewport</h3><h4 id="建议-若页面欲对移动设备友好，需指定页面的-viewport。"><a href="#建议-若页面欲对移动设备友好，需指定页面的-viewport。" class="headerlink" title="[建议] 若页面欲对移动设备友好，需指定页面的 viewport。"></a>[建议] 若页面欲对移动设备友好，需指定页面的 <code>viewport</code>。</h4><p>解释：</p><p>viewport meta tag 可以设置可视区域的宽度和初始缩放大小，避免在移动设备上出现页面展示不正常。</p><p>比如，在页面宽度小于 <code>980px</code> 时，若需 iOS 设备友好，应当设置 viewport 的 <code>width</code> 值来适应你的页面宽度。同时因为不同移动设备分辨率不同，在设置时，应当使用 <code>device-width</code> 和 <code>device-height</code> 变量。</p><p>另外，为了使 viewport 正常工作，在页面内容样式布局设计上也要做相应调整，如避免绝对定位等。</p><h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5 图片"></a>5 图片</h2><h4 id="强制-禁止-img-的-src-取值为空。延迟加载的图片也要增加默认的-src。"><a href="#强制-禁止-img-的-src-取值为空。延迟加载的图片也要增加默认的-src。" class="headerlink" title="[强制] 禁止 img 的 src 取值为空。延迟加载的图片也要增加默认的 src。"></a>[强制] 禁止 <code>img</code> 的 <code>src</code> 取值为空。延迟加载的图片也要增加默认的 <code>src</code>。</h4><p>解释：</p><p><code>src</code> 取值为空，会导致部分浏览器重新加载一次当前页面。</p><h4 id="建议-避免为-img-添加不必要的-title-属性。"><a href="#建议-避免为-img-添加不必要的-title-属性。" class="headerlink" title="[建议] 避免为 img 添加不必要的 title 属性。"></a>[建议] 避免为 <code>img</code> 添加不必要的 <code>title</code> 属性。</h4><p>解释：</p><p>多余的 <code>title</code> 影响看图体验，并且增加了页面尺寸。</p><h4 id="建议-为重要图片添加-alt-属性。"><a href="#建议-为重要图片添加-alt-属性。" class="headerlink" title="[建议] 为重要图片添加 alt 属性。"></a>[建议] 为重要图片添加 <code>alt</code> 属性。</h4><p>解释：</p><p>可以提高图片加载失败时的用户体验。</p><h4 id="建议-添加-width-和-height-属性，以避免页面抖动。"><a href="#建议-添加-width-和-height-属性，以避免页面抖动。" class="headerlink" title="[建议] 添加 width 和 height 属性，以避免页面抖动。"></a>[建议] 添加 <code>width</code> 和 <code>height</code> 属性，以避免页面抖动。</h4><h4 id="建议-有下载需求的图片采用-img-标签实现，无下载需求的图片采用-CSS-背景图实现。"><a href="#建议-有下载需求的图片采用-img-标签实现，无下载需求的图片采用-CSS-背景图实现。" class="headerlink" title="[建议] 有下载需求的图片采用 img 标签实现，无下载需求的图片采用 CSS 背景图实现。"></a>[建议] 有下载需求的图片采用 <code>img</code> 标签实现，无下载需求的图片采用 CSS 背景图实现。</h4><p>解释：</p><ol><li>产品 logo、用户头像、用户产生的图片等有潜在下载需求的图片，以 <code>img</code> 形式实现，能方便用户下载。</li><li>无下载需求的图片，比如：icon、背景、代码使用的图片等，尽可能采用 CSS 背景图实现。</li></ol><h2 id="6-表单"><a href="#6-表单" class="headerlink" title="6 表单"></a>6 表单</h2><h3 id="6-1-控件标题"><a href="#6-1-控件标题" class="headerlink" title="6.1 控件标题"></a>6.1 控件标题</h3><h4 id="强制-有文本标题的控件必须使用-label-标签将其与其标题相关联。"><a href="#强制-有文本标题的控件必须使用-label-标签将其与其标题相关联。" class="headerlink" title="[强制] 有文本标题的控件必须使用 label 标签将其与其标题相关联。"></a>[强制] 有文本标题的控件必须使用 <code>label</code> 标签将其与其标题相关联。</h4><p>解释：</p><p>有两种方式：</p><ol><li>将控件置于 <code>label</code> 内。</li><li><code>label</code> 的 <code>for</code> 属性指向控件的 <code>id</code>。</li></ol><p>推荐使用第一种，减少不必要的 <code>id</code>。如果 DOM 结构不允许直接嵌套，则应使用第二种。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"confirm"</span> <span class="attr">value</span>=<span class="string">"on"</span>&gt;</span> 我已确认上述条款<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"textbox"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-2-按钮"><a href="#6-2-按钮" class="headerlink" title="6.2 按钮"></a>6.2 按钮</h3><h4 id="强制-使用-button-元素时必须指明-type-属性值。"><a href="#强制-使用-button-元素时必须指明-type-属性值。" class="headerlink" title="[强制] 使用 button 元素时必须指明 type 属性值。"></a>[强制] 使用 <code>button</code> 元素时必须指明 <code>type</code> 属性值。</h4><p>解释：</p><p><code>button</code> 元素的默认 <code>type</code> 为 <code>submit</code>，如果被置于 <code>form</code> 元素中，点击后将导致表单提交。为显示区分其作用方便理解，必须给出 <code>type</code> 属性。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-尽量不要使用按钮类元素的-name-属性。"><a href="#建议-尽量不要使用按钮类元素的-name-属性。" class="headerlink" title="[建议] 尽量不要使用按钮类元素的 name 属性。"></a>[建议] 尽量不要使用按钮类元素的 <code>name</code> 属性。</h4><p>解释：</p><p>由于浏览器兼容性问题，使用按钮的 <code>name</code> 属性会带来许多难以发现的问题。具体情况可参考<a href="http://w3help.org/zh-cn/causes/CM2001" target="_blank" rel="noopener">此文</a>。</p><h3 id="6-3-可访问性-A11Y"><a href="#6-3-可访问性-A11Y" class="headerlink" title="6.3 可访问性 (A11Y)"></a>6.3 可访问性 (A11Y)</h3><h4 id="建议-负责主要功能的按钮在-DOM-中的顺序应靠前。"><a href="#建议-负责主要功能的按钮在-DOM-中的顺序应靠前。" class="headerlink" title="[建议] 负责主要功能的按钮在 DOM 中的顺序应靠前。"></a>[建议] 负责主要功能的按钮在 DOM 中的顺序应靠前。</h4><p>解释：</p><p>负责主要功能的按钮应相对靠前，以提高可访问性。如果在 CSS 中指定了 <code>float: right</code> 则可能导致视觉上主按钮在前，而 DOM 中主按钮靠后的情况。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.buttons</span> <span class="selector-class">.button-group</span> &#123;</span></span><br><span class="line"><span class="undefined">    float: right;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"button-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.buttons</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="undefined">    float: right;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-当使用-JavaScript-进行表单提交时，如果条件允许，应使原生提交功能正常工作。"><a href="#建议-当使用-JavaScript-进行表单提交时，如果条件允许，应使原生提交功能正常工作。" class="headerlink" title="[建议] 当使用 JavaScript 进行表单提交时，如果条件允许，应使原生提交功能正常工作。"></a>[建议] 当使用 JavaScript 进行表单提交时，如果条件允许，应使原生提交功能正常工作。</h4><p>解释：</p><p>当浏览器 JS 运行错误或关闭 JS 时，提交功能将无法工作。如果正确指定了 <code>form</code> 元素的 <code>action</code> 属性和表单控件的 <code>name</code> 属性时，提交仍可继续进行。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"用户名"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-在针对移动设备开发的页面时，根据内容类型指定输入框的-type-属性。"><a href="#建议-在针对移动设备开发的页面时，根据内容类型指定输入框的-type-属性。" class="headerlink" title="[建议] 在针对移动设备开发的页面时，根据内容类型指定输入框的 type 属性。"></a>[建议] 在针对移动设备开发的页面时，根据内容类型指定输入框的 <code>type</code> 属性。</h4><p>解释：</p><p>根据内容类型指定输入框类型，能获得能友好的输入体验。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-多媒体"><a href="#7-多媒体" class="headerlink" title="7 多媒体"></a>7 多媒体</h2><h4 id="建议-当在现代浏览器中使用-audio-以及-video-标签来播放音频、视频时，应当注意格式。"><a href="#建议-当在现代浏览器中使用-audio-以及-video-标签来播放音频、视频时，应当注意格式。" class="headerlink" title="[建议] 当在现代浏览器中使用 audio 以及 video 标签来播放音频、视频时，应当注意格式。"></a>[建议] 当在现代浏览器中使用 <code>audio</code> 以及 <code>video</code> 标签来播放音频、视频时，应当注意格式。</h4><p>解释：</p><p>音频应尽可能覆盖到如下格式：</p><ul><li>MP3</li><li>WAV</li><li>Ogg</li></ul><p>视频应尽可能覆盖到如下格式：</p><ul><li>MP4</li><li>WebM</li><li>Ogg</li></ul><h4 id="建议-在支持-HTML5-的浏览器中优先使用-audio-和-video-标签来定义音视频元素。"><a href="#建议-在支持-HTML5-的浏览器中优先使用-audio-和-video-标签来定义音视频元素。" class="headerlink" title="[建议] 在支持 HTML5 的浏览器中优先使用 audio 和 video 标签来定义音视频元素。"></a>[建议] 在支持 <code>HTML5</code> 的浏览器中优先使用 <code>audio</code> 和 <code>video</code> 标签来定义音视频元素。</h4><h4 id="建议-使用退化到插件的方式来对多浏览器进行支持。"><a href="#建议-使用退化到插件的方式来对多浏览器进行支持。" class="headerlink" title="[建议] 使用退化到插件的方式来对多浏览器进行支持。"></a>[建议] 使用退化到插件的方式来对多浏览器进行支持。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"audio.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mpeg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"audio.ogg"</span> <span class="attr">type</span>=<span class="string">"audio/ogg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">object</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">data</span>=<span class="string">"audio.mp3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">src</span>=<span class="string">"audio.swf"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"video.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">object</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">data</span>=<span class="string">"video.mp4"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">src</span>=<span class="string">"video.swf"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-只在必要的时候开启音视频的自动播放。"><a href="#建议-只在必要的时候开启音视频的自动播放。" class="headerlink" title="[建议] 只在必要的时候开启音视频的自动播放。"></a>[建议] 只在必要的时候开启音视频的自动播放。</h4><h4 id="建议-在-object-标签内部提供指示浏览器不支持该标签的说明。"><a href="#建议-在-object-标签内部提供指示浏览器不支持该标签的说明。" class="headerlink" title="[建议] 在 object 标签内部提供指示浏览器不支持该标签的说明。"></a>[建议] 在 <code>object</code> 标签内部提供指示浏览器不支持该标签的说明。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">data</span>=<span class="string">"something.swf"</span>&gt;</span>DO NOT SUPPORT THIS TAG<span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-模板中的-HTML"><a href="#8-模板中的-HTML" class="headerlink" title="8 模板中的 HTML"></a>8 模板中的 HTML</h2><h4 id="建议-模板代码的缩进优先保证-HTML-代码的缩进规则。"><a href="#建议-模板代码的缩进优先保证-HTML-代码的缩进规则。" class="headerlink" title="[建议] 模板代码的缩进优先保证 HTML 代码的缩进规则。"></a>[建议] 模板代码的缩进优先保证 HTML 代码的缩进规则。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line">&#123;if $display == true&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;foreach $item_list as $item&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;$item.name&#125;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;/foreach&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;/if&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line">&#123;if $display == true&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;foreach $item_list as $item&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;$item.name&#125;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;/foreach&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;/if&#125;</span><br></pre></td></tr></table></figure><h4 id="建议-模板代码应以保证-HTML-单个标签语法的正确性为基本原则。"><a href="#建议-模板代码应以保证-HTML-单个标签语法的正确性为基本原则。" class="headerlink" title="[建议] 模板代码应以保证 HTML 单个标签语法的正确性为基本原则。"></a>[建议] 模板代码应以保证 HTML 单个标签语法的正确性为基本原则。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;if $item.type_id == $current_type&#125;focus&#123;/if&#125;"</span>&gt;</span>&#123; $item.type_name &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> &#123;<span class="attr">if</span> $<span class="attr">item.type_id</span> == <span class="string">$current_type&#125;</span> <span class="attr">class</span>=<span class="string">"focus"</span>&#123;/<span class="attr">if</span>&#125;&gt;</span>&#123; $item.type_name &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="建议-在循环处理模板数据构造表格时，若要求每行输出固定的个数，建议先将数据分组，之后再循环输出。"><a href="#建议-在循环处理模板数据构造表格时，若要求每行输出固定的个数，建议先将数据分组，之后再循环输出。" class="headerlink" title="[建议] 在循环处理模板数据构造表格时，若要求每行输出固定的个数，建议先将数据分组，之后再循环输出。"></a>[建议] 在循环处理模板数据构造表格时，若要求每行输出固定的个数，建议先将数据分组，之后再循环输出。</h4><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    &#123;foreach $item_list as $item_group&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;foreach $item_group as $item&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123; $item.name &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        &#123;/foreach&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    &#123;/foreach&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    &#123;foreach $item_list as $item&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123; $item.name &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        &#123;if $item@iteration is div by 5&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;/if&#125;</span><br><span class="line">    &#123;/foreach&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信小游戏「跳一跳」 高分神器！</title>
      <link href="/2018/wechat-game-jump/"/>
      <url>/2018/wechat-game-jump/</url>
      <content type="html"><![CDATA[<p>  &emsp;&emsp;2017年12月28日，微信正式公布小游戏产品，其中第一批开放了15款H5小游戏，“跳一跳”即是其中之一。游戏玩法很简单，用户只需长按住屏幕中黑色的抽象小人，进行蓄力，蓄力越久就能跳得越远。只要小黑人不落到方格外，就能得分。一旦跳出方格外，游戏就算结束。这款游戏即点即玩，无需下载安装，玩家可以在微信内和好友一起玩。<br>  &emsp;&emsp;“今天你跳了吗？”这几天，微信朋友圈里“跳一跳”小游戏异常火热，其自带的得分排名功能，更是让很多人彻夜刷分。</p><p>但这一阵子网上也出现了很多的攻略：<br><img src="https://images.gxuann.cn/archives/wechat-game-jump-1.png" alt=""><br><img src="https://images.gxuann.cn/archives/wechat-game-jump-2.jpg" alt=""></p><hr><p>  &emsp;&emsp;但既然是高分攻略，就肯定不能使用传统攻略的。<br>  &emsp;&emsp;这周做课设的时候，逛Github时，发现一位作者写了一段关于「用Python来玩跳一跳」的代码，阅读之后，我按照要求把这段代码跑起来了测试了一下，发现果然是高分神器！</p><hr><p>下面来说说这个脚本：<br><img src="https://images.gxuann.cn/archives/wechat-game-jump-3.png" alt=""></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>1.将手机界面停留在「跳一跳」界面<br>2.用 ADB 工具获取当前手机截图，并用 ADB 将截图 pull 上来<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell screencap -p /sdcard/autojump.png</span><br><span class="line">adb pull /sdcard/autojump.png</span><br></pre></td></tr></table></figure></p><p>3.计算按压时间<br>4.用 ADB 工具点击屏幕蓄力一跳<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input swipe x y x y time(ms)</span><br></pre></td></tr></table></figure></p><h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><h5 id="简要步骤："><a href="#简要步骤：" class="headerlink" title="简要步骤："></a>简要步骤：</h5><p>首先搭建运行环境<code>ADB</code>和<code>Python</code>,然后将ADB添加到环境变量当中，最后就可以直接运行<code>.py</code>的脚本了。</p><h5 id="下面是详细步骤："><a href="#下面是详细步骤：" class="headerlink" title="下面是详细步骤："></a>下面是详细步骤：</h5><p><img src="https://images.gxuann.cn/archives/wechat-game-jump-4.png" alt=""></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>大家可以去作者的repo页面查看更详细的内容以及下载这个脚本</p><blockquote><p><a href="https://github.com/wangshub/wechat_jump_game" target="_blank" rel="noopener">Github:wangshub/wechat_jump_game</a><br>脚本由@wangshub提供</p></blockquote><p><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git常用指令整理</title>
      <link href="/2018/git-instruction/"/>
      <url>/2018/git-instruction/</url>
      <content type="html"><![CDATA[<p>本文对指令按照使用场景(建库，查看，修改，分支)进行分类归纳，介绍指令基本含义和用法，方便查阅。</p><h3 id="工作区、版本库和暂存区"><a href="#工作区、版本库和暂存区" class="headerlink" title="工作区、版本库和暂存区"></a>工作区、版本库和暂存区</h3><p>   <strong>工作区:</strong> 即工作目录。<br>   <strong>版本库:</strong> 隐藏目录<code>.git</code>，这个就是git的版本库。<br>   <strong>暂存区:</strong> Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。</p><p>将文件向Git版本库里添加时，是分为两步骤进行的：</p><blockquote><p>1.用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；<br>2.用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p></blockquote><h3 id="本地库和远程库"><a href="#本地库和远程库" class="headerlink" title="本地库和远程库"></a>本地库和远程库</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>  &emsp;&emsp;·建立远程库<br>  &emsp;&emsp;·本地新建文件夹<br>  &emsp;&emsp;·<code>git init</code>初始化仓库，可以发现当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的。<strong>-请勿修改-</strong><br>  &emsp;&emsp;·远程库的名字就是<code>origin</code>，这是Git默认的叫法<br>  &emsp;&emsp;·<code>git remote add origin git@github.com:guangxuan126/demo.git</code> 这个命令是在本地的demo仓库下执行的。这两个地方的仓库名不需要相同，因为会通过在本地的仓库目录下执行这条命令已经将两者建立了联系<br>  &emsp;&emsp;·<code>git push -u origin master</code> 把本地库的所有内容推送到远程库上。把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支master推送到远程。由于远程库是空的，我们第一次推送master分支时，加上了-u参数(推送和关联，Git不但会把本地的master分支内容推送到远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。<br>  &emsp;&emsp;·<code>git push origin master</code>每次本地提交后,推送最新修改到远程库</p><h4 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h4><p>假设github上面已经有一个远程库，但是本地没有，需要克隆到本地，远程库的名字叫<code>demo2</code><br><br>  &emsp;&emsp;·<code>git clone git@github.com:guangxuan126/demo2.git</code> 克隆一个本地库,则在当前文件夹下会多一个demo2的文件夹。<br>  &emsp;&emsp;·<code>cd demo2</code>进入克隆下来的本地库，默认的名字是和github上的一样的<br>  &emsp;&emsp;·<code>git push origin master</code> 推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上</p><h3 id="常用查询指令"><a href="#常用查询指令" class="headerlink" title="常用查询指令"></a>常用查询指令</h3><p>  &emsp;&emsp;·<code>git status</code> 查看仓库当前的状态<br>  &emsp;&emsp;·<code>git diff 文件名</code>查看对文件做什么修改<br>  &emsp;&emsp;·<code>git diff 版本号1 版本号2 --stat</code>查看两个版本的差异的文件列表，包括被修改行数和增删图。参数改为<code>--name-status</code>前面显示修改说明字母(A,M等)，无行数<br>  &emsp;&emsp;·<code>git log</code>显示从最近到最远的提交日志<br>  &emsp;&emsp;·<code>git log --pretty=oneline</code> 简化日志输出的显示信息，<code>commit id</code>很长<br>  &emsp;&emsp;·<code>git reflog</code> 记录你的每一次命令，最先显示的是这个命令执行之后的版本的版本号的前七位，这样就算你清屏了或者重启了，也能找到某个版本的版本号，就可以轻松回退到那个版本<br>  &emsp;&emsp;· <code>git branch</code> 查看当前所在的分支。git branch命令会列出所有分支，当前分支前面会标一个<code>*</code>号<br>  &emsp;&emsp;·<code>git log --graph --pretty=oneline --abbrev-commit</code>用带参数的git log可以看到分支的合并情况。用<code>git log --graph</code>命令可以看到分支合并图<br>  &emsp;&emsp;·<code>git remote</code> 查看远程库的信息<br>  &emsp;&emsp;·<code>git remote -v</code> 显示更为详细的信息</p><h3 id="常用修改指令"><a href="#常用修改指令" class="headerlink" title="常用修改指令"></a>常用修改指令</h3><p>  &emsp;&emsp;·<code>git add readme.md</code>添加文件，但是不提交<br>  &emsp;&emsp;·<code>git commit -m &quot;提交描述&quot;</code>提交，<strong>只有add后提交才有效。</strong> <em>“改文件-&gt;add文件-&gt;再改-&gt;提交”</em>，则第二次修改无效,不会被提交，只会成功提交第一次的修改。</p><h3 id="撤销修改和版本回退"><a href="#撤销修改和版本回退" class="headerlink" title="撤销修改和版本回退"></a>撤销修改和版本回退</h3><p>  &emsp;&emsp;·<code>git checkout -- 文件名</code>把没暂存(即没add)的干掉，或者说，丢弃工作区，回到到暂存状态<br>  &emsp;&emsp;·<code>git reset HEAD 文件名</code>把暂存的状态取消，工作区内容不变，但状态变为“未暂存”。<br>简单来说，没有add过的修改，只需要<code>git checkout -- 文件名</code>即可撤销；add 过的修改，先<code>git reset HEAD 文件名</code>变成没add 过的修改，再<code>git checkout -- 文件名</code>撤销。<br>  &emsp;&emsp;·<code>git reset --hard HEAD^</code> 会回退到上一个版本<br>  &emsp;&emsp;·<code>git reset --hard 某版本号前几位</code>通过命令行上的历史信息（假如你没清屏的话），找到某版本 的版本号回到指定版本。不一定要全部的版本号，就像这个命令的例子，只要前面的约7、8位这样就可以。</p><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><h4 id="创建和合并分支"><a href="#创建和合并分支" class="headerlink" title="创建和合并分支"></a>创建和合并分支</h4><p>  &emsp;&emsp;·<code>git checkout -b dev</code>创建一个新的分支：dev，并且会切换到dev分支。所以这条命令有两个作用。<code>git checkout</code>命令加上<code>-b</code>参数表示创建并切换，相当于以下两条命令：<code>git branch dev</code>和<code>git checkout dev</code><br>  &emsp;&emsp;·<code>git branch dev</code>，新建分支是新建指针,指向当前commit<br>  &emsp;&emsp;·<code>git checkout dev</code>切换到dev分支<br>  &emsp;&emsp;·<code>git checkout master</code>dev分支的工作完成，我们就可以切换回master分支 <strong>(此时在dev分支的修改在master上是看不到的)</strong><br>  &emsp;&emsp;·<code>git merge dev</code> 这是在master分支上执行的命令，作用是：把dev分支上的工作成果合并到master分支上<br>  &emsp;&emsp;·<code>git branch -d dev</code> 删除已合并的分支。删除分支就是删除指针<br>  &emsp;&emsp;·<code>git branch -D dev</code>Git友情提醒，dev分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用<code>git branch -D dev</code>命令<br>  &emsp;&emsp;·<code>git rebase master</code>变基。在当前分支(非master)下执行该命令，则相当于把当前分支和mater分支合并，和merge操作类似，但提交历史不同，rebase操作的log更干净</p><h4 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h4><p>  &emsp;&emsp;·<code>git fetch origin</code> 这个命令查找 “origin” 是哪一个服务器，从中抓取本地没有的数据，并且更新本地数据库，移动 <code>origin/master</code>指针指向新的、更新后的位置<br>  &emsp;&emsp;·<code>git push (remote) (branch)</code>推送本地的分支来更新远程仓库上的 同名分支。如前文提到的<code>git push origin master</code>就是将本地master分支推送到远程master分支；复杂一点的，<code>git push origin serverfix:awesomebranch</code>将本地的 serverfix分支推送到远程仓库上的awesomebranch分支<br>  &emsp;&emsp;·<code>git push origin --delete serverfix</code>或者<code>git push origin :remotebranch</code>,删除远程的serverfix分支<br>  &emsp;&emsp;·<code>git pull</code>在大多数情况下它的含义是一个<code>git fetch</code>紧接着一个<code>git merge</code>命令。<br>  <br></p><h3 id="推荐优秀教程"><a href="#推荐优秀教程" class="headerlink" title="推荐优秀教程"></a>推荐优秀教程</h3><blockquote><ul><li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Git</a></li><li><a href="http://iissnan.com/progit/" target="_blank" rel="noopener">Pro Git</a></li></ul></blockquote><p><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown语法手册</title>
      <link href="/2017/markdown-manual/"/>
      <url>/2017/markdown-manual/</url>
      <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p> <strong>Markdown</strong> 是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p><p>John Gruber 在 2004 年创造了 Markdown 语言，在语法上有很大一部分是跟亚伦·斯沃茨（Aaron Swartz）共同合作的。这个语言的目的是希望大家使用“易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的 XHTML (或是HTML)”。 其中最重要的设计是可读性，也就是说这个语言应该要能直接在字面上的被阅读，而不用被一些格式化指令标记 (像是 RTF 与 HTML)。 因此，它是现行电子邮件标记格式的惯例，虽然它也借鉴了很多早期的标记语言，如：setext、Texile、reStructuredText。 许多网站都使用 Markdown 或是其变种，例如：GitHub、reddit、Diaspora、Stack Exchange、OpenStreetMap 与 SourceForge 让用户更利于讨论。</p><hr><h1 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h1><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 标题H1</span><br><span class="line">## 标题H2</span><br><span class="line">### 标题H3</span><br><span class="line">#### 标题H4</span><br><span class="line">##### 标题H5</span><br><span class="line">###### 标题H6</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br><img src="https://images.gxuann.cn/markdown-manual_md1.png" alt=""></p><h3 id="2-斜体-amp-加粗"><a href="#2-斜体-amp-加粗" class="headerlink" title="2.斜体&amp;加粗"></a>2.斜体&amp;加粗</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">__加粗__</span><br><span class="line">*斜体*</span><br><span class="line">_斜体_</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br><strong>加粗</strong><br><strong>加粗</strong><br><em>斜体</em><br>_斜体_</p><h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3.删除线"></a>3.删除线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~被删除的内容~~</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br><del>被删除的内容</del></p><h3 id="4-链接"><a href="#4-链接" class="headerlink" title="4.链接"></a>4.链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个跳转到[百度](https://www.baidu.com/)的链接</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br>这是一个跳转到<a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a>的链接</p><h3 id="5-图片"><a href="#5-图片" class="headerlink" title="5.图片"></a>5.图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt注释](https://images.gxuann.cn/logo.png)</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br><img src="https://images.gxuann.cn/logo.png" alt="这是logo"></p><h3 id="6-代码-amp-代码段-amp-代码高亮"><a href="#6-代码-amp-代码段-amp-代码高亮" class="headerlink" title="6.代码&amp;代码段&amp;代码高亮"></a>6.代码&amp;代码段&amp;代码高亮</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用``或者```将代码括起来以显示单行或者多行代码</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br><code>this is code !</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cd</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#code'</span>).val(num + <span class="string">'秒后可重发'</span>);</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num - <span class="number">1</span> &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            cd(num - <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">'#code'</span>).removeClass(<span class="string">'bg-gray'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>).val(<span class="string">'重新发送验证码'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用 | - : 来构建表格</span><br><span class="line">| Header One     | Header Two     |</span><br><span class="line">| :------------- | :------------- |</span><br><span class="line">| Item One       | Item Two       |</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br>| Header One     | Header Two     |<br>| :————- | :————- |<br>| Item One       | Item Two       |</p><h3 id="8-引用"><a href="#8-引用" class="headerlink" title="8.引用"></a>8.引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;使用右尖括号放在引用文字的开头。</span><br><span class="line">&gt;这里是一段引用的文字。</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code></p><blockquote><p>这里是一段引用的文字。</p></blockquote><h3 id="9-复选框-amp-Todo-list"><a href="#9-复选框-amp-Todo-list" class="headerlink" title="9.复选框&amp;Todo list"></a>9.复选框&amp;Todo list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用-和一个空格还有[]来表示选中或者未选中状态。</span><br><span class="line">- [x] A</span><br><span class="line">- [ ] B</span><br><span class="line">- [x] 已选中</span><br><span class="line">- [ ] 未选中</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code></p><ul><li style="list-style: none"><input type="checkbox" checked> A</li><li style="list-style: none"><input type="checkbox"> B</li><li style="list-style: none"><input type="checkbox" checked> 已选中</li><li style="list-style: none"><input type="checkbox"> 未选中</li></ul><h3 id="10-有序-amp-无序列表"><a href="#10-有序-amp-无序列表" class="headerlink" title="10.有序&amp;无序列表"></a>10.有序&amp;无序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">使用- 或者 数字来表示无序列表和有序列表的项目，注意符号与项目之间有空格。</span><br><span class="line">这是无序列表：</span><br><span class="line">- 项目1</span><br><span class="line">- 项目2</span><br><span class="line">- 项目3</span><br><span class="line"></span><br><span class="line">这是有序列表：</span><br><span class="line">1. 项目1</span><br><span class="line">2. 项目2</span><br><span class="line">3. 项目3</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br>这是无序列表：</p><ul><li>项目1</li><li>项目2</li><li>项目3</li></ul><p>这是有序列表：</p><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><h3 id="11-分割线"><a href="#11-分割线" class="headerlink" title="11.分割线"></a>11.分割线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用连续的三个---表示分割线</span><br></pre></td></tr></table></figure><p><code>渲染效果：</code><br>这下面是个分割线↓</p><hr><p>这上面是个分割线↑</p><p><br><br>未完待续…<br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chrome插件推荐-1</title>
      <link href="/2017/chrome-extensions1/"/>
      <url>/2017/chrome-extensions1/</url>
      <content type="html"><![CDATA[<p></p><p style="text-align: center;">推荐使用 <i class="fa fa-chrome fa-2x" aria-hidden="true"></i> Chrome 浏览器<br>文中部分网页需要科学上网才能访问</p><br><br><br>用过Chrome的人都知道，加上插件可以使Chrome变得更加的强大易用，那么今天，我就推荐些我自己使用的一些Chrome插件，可以这么说，熟练使用这些插件，会对你的开发效率大大提高，逼格瞬间上升一个档次。<br><br><strong><span style="font-size: 30px;">1.<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">Tampermonkey</a></span></strong><br><img src="https://images.gxuann.cn/archives/ce1-tampermonkey.png" alt=""><br>中文名「油猴」，emmm…我觉得这个插件可以不用过多介绍了，简单的说，它就是个神器，强烈建议大家去了解下，因为你可以在上面找到各种黑科技的脚本，去广告、重定向……等等；总之，请大家自行发现其中黑科技内容。<br><br><br><strong><span style="font-size: 30px;">2.<a href="https://chrome.google.com/webstore/detail/adblock-plus-development/ldcecbkkoecffmfljeihcmifjjdoepkn?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">Adblock Plus</a></span></strong><br><img src="https://images.gxuann.cn/archives/ce1-adblock.png" alt=""><br>过滤烦人广告,畅游清爽洁净的网际!<br>这款插件推荐配合着「油猴」的去除重定向脚本，可以最大限度的去除广告和一些无关信息。<br><br><br><strong><span style="font-size: 30px;">3.<a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">捕捉网页截图</a></span></strong><br><img src="https://images.gxuann.cn/archives/ce1-screenshot.png" alt=""><br>截取页面的时候还在使用<code>Control+Alt+A</code>或者<code>PRINT SCREEN</code>吗？还在担心截不全页面吗？用了这个工具，妥妥的解决所有问题。<br>安装这个插件后，可以选择截取整个页面或者选定的特定页面，也可以选择导出到PNG或者PDF，如果要展示某个页面或者需要保存特定的页面，可以说是非常方便的一个工具。<br><br><br><strong><span style="font-size: 30px;">4.<a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">Anything to QRcode</a></span></strong><br><img src="https://images.gxuann.cn/archives/ce1-qrcode.png" alt=""><br>通过右键菜单或地址栏按钮将当前页面地址、选中的文本、链接、图片地址等文本内容生成二维码，也可以解析页面中的二维码图片。如果在电脑上发现一篇很棒的文章，但是想稍后在手机上阅读，可以利用这个插件，将网页转换成二维码，然后用手机扫描后稍后阅读。<br><br><br><strong><span style="font-size: 30px;">5.<a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">TransIt</a></span></strong><br><img src="https://images.gxuann.cn/archives/ce1-translt.png" alt=""><br>让划词翻译更简单,它内置了有道、百度、必应的翻译服务，选择其中一项之后，就可以在Chrome中开启划词翻译了，以后碰见不认识的单词再也不用单独开个网页专门去查询了。<br><br><br>好了，这些就是这次推荐的5个实用的插件了，虽然开启过多的插件会占用更多的系统资源，不过我觉得，牺牲一些资源来换取更高效的效率还是非常划算的一笔买卖！<br><br><br>&amp;&amp;<br>end<p></p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为什么选择Chrome</title>
      <link href="/2017/why-chrome/"/>
      <url>/2017/why-chrome/</url>
      <content type="html"><![CDATA[<p><img src="https://images.gxuann.cn/archives/why_chromecdots.gif" alt=""></p><p><iframe src="https://www.bilibili.com/html/html5player.html?aid=13943470&cid=22778748&as_wide=1" width="100%" height="480" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe><br><br>了解我的同学一定知道，如果要让我推荐一款浏览器，我毫不犹豫地说：快去用Chrome. 对于一个Google重度使用者来说，一套Google全家桶是必不可少的，那么这其中，Chrome也肯定缺不了，那么今天来介绍下为什么要选择chrome.</p><blockquote><p>首先来看一组数据：<br><img src="https://images.gxuann.cn/archives/why_chromec1.png" alt=""><br><img src="https://images.gxuann.cn/archives/why_chromec2.png" alt=""><br>这两张图分别表明了全平台和PC平台过去几年浏览器的份额变化，从上表中可以轻易的得出一个结论：Chrome的份额正在不断攀升。<br><br><br><i class="fa fa-database" aria-hidden="true"></i>数据来源：<a href="https://andreasgal.com/2017/05/25/chrome-won/" target="_blank" rel="noopener">https://andreasgal.com/2017/05/25/chrome-won/</a></p></blockquote><p>就我个人而言总结了以下几点：<br>1.Chrome 非常注重开发者，内置的 开发者工具 非常好用，web开发必备工具之一！<br><br>2.插件，这可能是最大的加分项了吧，可谓是和国内的某宝一样，只要你能想到的，这里都可以找得到！这些插件可以大大提高效率，或者是自定义内容。<br><br>3.一些实用小功能，比如输入一个网址后，按下<code>TAB</code>可以使用输入的页面进行搜索，比如在地址栏输入google.com然后按下<code>TAB</code>可以直接进行Google搜索。<br><br>4.快，非常快！得益于 Chrome 很强大的预加载系统，例如：平均每个页面带有 80 个资源，分别来自于 30 多个独立的主机。每打开这个页面，Chrome 会记下资源中比较常用的主机名，在后续的浏览过程中，Chrome 就会发起针对某些主机或者全部主机的 DNS 解析，甚至是 TCP 预连接。可以通过<code>chrome://histograms/DNS</code>观察到DNS度量数据，<code>chrome://dns</code>查看TCP预连接数据。<code>总的来说，就是越用越快！</code><br><br>鱼和熊掌不可兼得，Chrome之所以这么快也是有一些缺点的，由于预加载是需要同时消耗CPU和网络资源，所以有些低配电脑可能会发现使用Chrome的时候计算机会有些少许卡顿，也就是这个原因了。不过，我觉得使用一台高性能的计算机来换取更高的效率还是值得的！<br><br>总之呢，Chrome是越用越快的！这也就是为什么我推荐Chrome的原因了~<br><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> public </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>重新安装Windows的简易教程</title>
      <link href="/2017/install-windows/"/>
      <url>/2017/install-windows/</url>
      <content type="html"><![CDATA[<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>&ensp;&ensp;<i class="fa fa-check-square-o"></i>系统镜像<br>&ensp;&ensp;<i class="fa fa-check-square-o"></i>U盘一个（&gt;8GB）<br>&ensp;&ensp;<i class="fa fa-check-square-o"></i>一台计算机</p><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>请确认<br>&ensp;&ensp;<i class="fa fa-dot-circle-o" aria-hidden="true"></i>BIOS启动模式为<code>UEFI</code><br>&ensp;&ensp;<i class="fa fa-dot-circle-o" aria-hidden="true"></i>硬盘为<code>GPT分区</code></p><p> <i class="fa fa-exclamation-circle"></i>符合上面确认规则的用户或之前计算机有安装、激活过Windows10的用户可以直接跳过这一步.<br><br><code>BIOS</code>请参阅厂商说明书调整至<code>UEFI</code><br><code>GPT分区</code>转换：<i class="fa fa-exclamation-triangle" aria-hidden="true"></i>下面的操作会清除硬盘内所有信息，请提前做好备份<br>先进入Windows安装环境，然后在任何步骤开始之前按<code>Shift+F10</code>进入<code>命令提示符</code>然后输入以下命令(命令需要逐条运行)<br><i class="fa fa-question-circle" aria-hidden="true"></i><code>disk X 这里的X指的是目标磁盘</code><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">sel disk X</span><br><span class="line">clean</span><br><span class="line"><span class="built_in">convert</span> gpt</span><br></pre></td></tr></table></figure></p><h3 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h3><h4 id="制作安装介质"><a href="#制作安装介质" class="headerlink" title="制作安装介质"></a>制作安装介质</h4><p><strong>方法1</strong>：使用<code>UltraISO</code>或其他同类软件可以轻松地将系统镜像写入U盘，具体操作可简述：通过软件打开镜像后，点击<code>启动&gt;写入硬盘映像</code>硬盘驱动器选择U盘，然后点击<code>格式化</code>，最后点击<code>写入</code>，等待写入完成之后即可关闭此软件。<br><strong>方法2(不推荐)</strong>：这是个简单粗暴的方法，将U盘手动格式化成<code>FAT32</code>；然后打开镜像，将里面所有内容复制到U盘即可。不推荐的原因是这个操作有可能会发生未知错误。</p><h4 id="安装windows"><a href="#安装windows" class="headerlink" title="安装windows"></a>安装windows</h4><p>当一切准备就绪后，插入U盘，打开计算机，在开机引导之前进入一次性引导菜单（TIPS:由于各品牌电脑进入方式不同，具体按键建议自行Google，这里以DELL的电脑为例）出现DELL logo时，按<code>F12</code>进入一次性引导菜单，选择刚才制作的U盘，即可进入Windows安装环境。<br>紧接着，可以理解成正常安装软件那样，下一步，根据提示选择需要安装的版本、同意许可之后会让用户选择安装方式<code>升级</code>和<code>自定义</code>,这里需要选择<code>自定义</code>然后根据需要分配磁盘空间，选择需要安装的目标分区，点击下一步即可。<br><i class="fa fa-refresh fa-spin fa-fw"></i><span class="sr-only">Loading…</span>等待安装完成…<br>点击重启即可完成安装。</p><h4 id="完善阶段"><a href="#完善阶段" class="headerlink" title="完善阶段"></a>完善阶段</h4><p>重启之后，计算机就可以正常进入系统并且含有基本驱动程序，这时候需要去安装必要驱动、更新系统补丁、选择性安装功能补丁和驱动。<br>强烈不建议使用第三方驱动安装程序，请自行去电脑品牌官网下载符合当前配置的驱动程序。<br>这里附上一些常见品牌的技术支持页面，可在这里查找到相关驱动程序：</p><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left"><a href="http://www.dell.com/support/home/cn/zh/cndhs1?~ck=mn" target="_blank" rel="noopener">Dell支持</a></td><td style="text-align:left"><a href="http://support.lenovo.com.cn/lenovo/wsi/index.html" target="_blank" rel="noopener">Lenovo支持</a></td></tr><tr><td style="text-align:left"><a href="https://www.acer.com.cn/ac/zh/CN/content/support/" target="_blank" rel="noopener">Acer支持</a></td><td style="text-align:left"><a href="https://cn.msi.com/support/" target="_blank" rel="noopener">MSI支持</a></td></tr><tr><td style="text-align:left"><a href="https://www.asus.com.cn/support/" target="_blank" rel="noopener">ASUS支持</a></td><td style="text-align:left"><a href="https://support.hp.com/cn-zh" target="_blank" rel="noopener">HP支持</a></td></tr></tbody></table><hr><h3 id="More"><a href="#More" class="headerlink" title="More"></a>More</h3><h4 id="系统镜像可以在这里下载：MSDN-Manual"><a href="#系统镜像可以在这里下载：MSDN-Manual" class="headerlink" title="系统镜像可以在这里下载：MSDN-Manual"></a>系统镜像可以在这里下载：<a href="http://tc.gxuann.cn/msdn/index.html" target="_blank" rel="noopener">MSDN-Manual</a></h4><h4 id="附上一些图以说明其中步骤的注意点："><a href="#附上一些图以说明其中步骤的注意点：" class="headerlink" title="附上一些图以说明其中步骤的注意点："></a>附上一些图以说明其中步骤的注意点：</h4><blockquote><p>如果之前未安装和激活过Windows10，则会出现下面这个界面，点击<code>我没有产品密钥</code>以继续安装。</p></blockquote><p><img src="https://images.gxuann.cn/installwindows_i1.png" alt=""></p><hr><blockquote><p>在分区完成后会发现多出来2-3个容量在500MB以内的小分区，这是系统自动分出的ESP引导分区和Recovery恢复分区，注意这里需要正确选择安装Windows的分区。</p></blockquote><p><img src="https://images.gxuann.cn/installwindows_i2.png" alt=""></p><hr><blockquote><p>关于安装介质的制作，<code>写入硬盘镜像</code>窗口中，红色框内可直接默认，不用修改；<code>格式化</code>窗口内也是默认就好。</p></blockquote><p><img src="https://images.gxuann.cn/installwindows_i4.png" alt=""></p><hr><h4 id="最后一点"><a href="#最后一点" class="headerlink" title="最后一点"></a>最后一点</h4><p><strong>不推荐 不推荐 不推荐</strong> 大家使用第三方驱动安装程序，请尽量去厂商官网下载符合自己计算机的驱动程序！</p><p><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tutorials </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>视频解析工具</title>
      <link href="/2017/video-anls/"/>
      <url>/2017/video-anls/</url>
      <content type="html"><![CDATA[<h4 id="视频解析？"><a href="#视频解析？" class="headerlink" title="视频解析？"></a>视频解析？</h4><p>前一阵子特别火的一个东西，网上有很多教程，我找到一些源码就拿来搭了一个这样的工具，主要用于解析各类视频网站VIP才可观看的视频资源。当然这也不是可以解析所有视频资源，而是大部分的。<br><br>工具访问地址： <a href="http://tc.gxuann.cn/vod/index.html" target="_blank" rel="noopener">视频解析</a><br><br></p><h4 id="大部分？"><a href="#大部分？" class="headerlink" title="大部分？"></a>大部分？</h4><p>经过测试，youku上绝大多数都可以播放，而最近腾讯视频由于接口那边出现了些问题导致只能解析试看的部分，而爱奇艺使用了<a href="#">DRM</a>保护，这是无法解析的。</p><blockquote><p><strong>DRM</strong>？<br>数字权利管理（英语：Digital rights management，DRM）是一种技术，该技术通常被硬件厂商、出版商、版权持有人以及个人使用，他们希望控制数字内容和设备在被销售之后的使用过程。<br><br>2013 年 8 月 20 日，百度旗下的爱奇艺视频与 Intertrust 技术公司宣布：国内领先的互联网视频提供商爱奇艺视频将使用 Intertrust 的 ExpressPlay Marlin DRM 平台作为爱奇艺在线视频服务的内容保护方案。</p></blockquote><p><br></p><h4 id="简易的使用教程"><a href="#简易的使用教程" class="headerlink" title="简易的使用教程"></a>简易的使用教程</h4><p>在视频网站中找到视频的URL，将URL复制到工具页面的<code>播放地址</code>处，点击播放就行。<br><code>TIPS：</code>有时候需要针对不同的视频网站选取不同的接口，接口可用情况在页面的下方。<br><img src="https://images.gxuann.cn/archives/v1.png" alt="简易使用教程"><br><br></p><h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><p>这个工具的所有接口信息<strong>均来自互联网</strong>，仅供学习交流使用，我们<strong>尊重任何视频版权</strong>，并且<strong>提倡大家去支持正版</strong>，如无意冒犯了您的权益，请联系我，我将及时处理。<br><br><br>&amp;&amp;<br>end</p>]]></content>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MSDN资源手册</title>
      <link href="/2017/msdn-manual/"/>
      <url>/2017/msdn-manual/</url>
      <content type="html"><![CDATA[<h4 id="MSDN"><a href="#MSDN" class="headerlink" title="MSDN ?"></a>MSDN ?</h4><blockquote><p>微软开发者网络（Microsoft Developer Network）是早期微软公司在推广Win32 程序设计以及开发工具时，专门为开发人员所提供的一个服务，是使用微软技术开发软件或应用程序时必定会参访的地方，同时它也有提供订阅的服务，由微软不定时供应最新的软件及技术文件。<br>同样，在国内有个神奇的网站 <a href="http://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN I Tell you</a> ;这是个仅为个人性质的原版软件信息收录站点，2007年开始至今。里面收录了很多的微软原版软件和信息。</p></blockquote><p><br></p><h4 id="MSDN-Manual"><a href="#MSDN-Manual" class="headerlink" title="MSDN-Manual ?"></a>MSDN-Manual ?</h4><p>  <br><br>  工具访问地址： <a href="http://tc.gxuann.cn/msdn/index.html" target="_blank" rel="noopener">MSDN-Manual</a><br>  <br><br>  这是我使用<code>Atom</code>和<code>amWiki</code>编写的一个轻文库，用于汇总一些常用的资源，搬运自itellyou,更多内容可访问itellyou.<br><br>  <code>Atom</code>是Github出品的一款非常强大的编辑器.<br>  <code>amWiki</code>是一款由 JS 开发、依赖 Atom 或 Nodejs-Npm 的 Markdown 轻量级前端化开源文库系统, 作者:<code>TevinLi</code>.<a href="https://github.com/TevinLi/amWiki" target="_blank" rel="noopener">Fork on Github</a><br>  <img src="https://images.gxuann.cn/archives/m1.png" alt=""></p><p><br></p><h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><p>  如果需要更多资源可以留言给我，我会及时更新。<br><br></p><p>  &amp;&amp;<br>  end</p>]]></content>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello-World-hello-HEXO</title>
      <link href="/2017/Hello-World-hello-HEXO/"/>
      <url>/2017/Hello-World-hello-HEXO/</url>
      <content type="html"><![CDATA[<h4 id="Incredible-你居然发现了这里"><a href="#Incredible-你居然发现了这里" class="headerlink" title="Incredible !!!  你居然发现了这里"></a>Incredible !!!  你居然发现了这里</h4><blockquote><p>If I have seen further, it is by standing on the shoulders of giants.<br>—Isaac Newton</p></blockquote><p><img src="https://images.gxuann.cn/archives/t1.jpg" alt=""></p><p>这是我在HEXO的第一篇文章，这里应该是我在不久的将来放弃WordPress时候的另一个根据地，哈哈。怎么说呢，或许那时候这就不应该叫做博客了，更多的是我自己写的一些教程或者一些奇奇怪怪的东西 算是自己留档的一个地方吧。<br><br><br><del>总之呢，现在还没构思好这里具体要放什么东西………没准过一阵子就想好了呢。</del><br><br><br>我已经把WordPress搬过来了！<br><br></p><p>&amp;&amp;<br>That all…</p>]]></content>
      
      
    </entry>
    
  
  
</search>
